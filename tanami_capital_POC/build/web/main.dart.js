// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 2.19.2 (stable) (Tue Feb 7 18:37:17 2023 +0000) on "linux_x64"
// Module: zapp_user_main
// Flags: soundNullSafety(true), enableAsserts(true)
define('zapp_user_main', ['dart_sdk', 'flutter_sdk'], (function load__zapp_user_main(dart_sdk, flutter_sdk) {
  'use strict';
  const core = dart_sdk.core;
  const async = dart_sdk.async;
  const _interceptors = dart_sdk._interceptors;
  const js = dart_sdk.js;
  const ui = dart_sdk.ui;
  const _js_helper = dart_sdk._js_helper;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const app = flutter_sdk.src__material__app;
  const theme_data = flutter_sdk.src__material__theme_data;
  const colors = flutter_sdk.src__material__colors;
  const app_bar_theme = flutter_sdk.src__material__app_bar_theme;
  const system_chrome = flutter_sdk.src__services__system_chrome;
  const text_style = flutter_sdk.src__painting__text_style;
  const icon_theme_data = flutter_sdk.src__widgets__icon_theme_data;
  const elevated_button_theme = flutter_sdk.src__material__elevated_button_theme;
  const elevated_button = flutter_sdk.src__material__elevated_button;
  const rounded_rectangle_border = flutter_sdk.src__painting__rounded_rectangle_border;
  const border_radius = flutter_sdk.src__painting__border_radius;
  const outlined_button_theme = flutter_sdk.src__material__outlined_button_theme;
  const outlined_button = flutter_sdk.src__material__outlined_button;
  const borders = flutter_sdk.src__painting__borders;
  const input_decorator = flutter_sdk.src__material__input_decorator;
  const edge_insets = flutter_sdk.src__painting__edge_insets;
  const input_border = flutter_sdk.src__material__input_border;
  const framework = flutter_sdk.src__widgets__framework;
  const binding = flutter_sdk.src__widgets__binding;
  const form = flutter_sdk.src__widgets__form;
  const editable_text = flutter_sdk.src__widgets__editable_text;
  const navigator = flutter_sdk.src__widgets__navigator;
  const page = flutter_sdk.src__material__page;
  const scaffold = flutter_sdk.src__material__scaffold;
  const snack_bar = flutter_sdk.src__material__snack_bar;
  const dismissible = flutter_sdk.src__widgets__dismissible;
  const text = flutter_sdk.src__widgets__text;
  const annotated_region = flutter_sdk.src__widgets__annotated_region;
  const safe_area = flutter_sdk.src__widgets__safe_area;
  const basic = flutter_sdk.src__widgets__basic;
  const flex = flutter_sdk.src__rendering__flex;
  const single_child_scroll_view = flutter_sdk.src__widgets__single_child_scroll_view;
  const text_input = flutter_sdk.src__services__text_input;
  const icon_button = flutter_sdk.src__material__icon_button;
  const icon = flutter_sdk.src__widgets__icon;
  const icons = flutter_sdk.src__material__icons;
  const alignment = flutter_sdk.src__painting__alignment;
  const text_button = flutter_sdk.src__material__text_button;
  const progress_indicator = flutter_sdk.src__material__progress_indicator;
  const text_form_field = flutter_sdk.src__material__text_form_field;
  const text_formatter = flutter_sdk.src__services__text_formatter;
  const icon_data = flutter_sdk.src__widgets__icon_data;
  const container = flutter_sdk.src__widgets__container;
  const box_decoration = flutter_sdk.src__painting__box_decoration;
  const text_span = flutter_sdk.src__painting__text_span;
  const inline_span = flutter_sdk.src__painting__inline_span;
  const app_bar = flutter_sdk.src__material__app_bar;
  const box_border = flutter_sdk.src__painting__box_border;
  const box_shadow = flutter_sdk.src__painting__box_shadow;
  const divider = flutter_sdk.src__material__divider;
  const bottom_navigation_bar = flutter_sdk.src__material__bottom_navigation_bar;
  const bottom_navigation_bar_item = flutter_sdk.src__widgets__bottom_navigation_bar_item;
  const scroll_view = flutter_sdk.src__widgets__scroll_view;
  const basic_types = flutter_sdk.src__painting__basic_types;
  const gesture_detector = flutter_sdk.src__widgets__gesture_detector;
  const refresh_indicator = flutter_sdk.src__material__refresh_indicator;
  const bottom_sheet = flutter_sdk.src__material__bottom_sheet;
  const draggable_scrollable_sheet = flutter_sdk.src__widgets__draggable_scrollable_sheet;
  const animations = flutter_sdk.src__animation__animations;
  const scroll_controller = flutter_sdk.src__widgets__scroll_controller;
  const text_painter = flutter_sdk.src__painting__text_painter;
  const number_format = flutter_sdk.src__intl__number_format;
  const date_format = flutter_sdk.src__intl__date_format;
  var $46zapp_entry = Object.create(dart.library);
  var main = Object.create(dart.library);
  var web_plugin_registrant = Object.create(dart.library);
  var login_screen = Object.create(dart.library);
  var colors$ = Object.create(dart.library);
  var text_styles = Object.create(dart.library);
  var custom_button = Object.create(dart.library);
  var custom_text_field = Object.create(dart.library);
  var tanami_logo = Object.create(dart.library);
  var registration_screen = Object.create(dart.library);
  var dashboard_screen = Object.create(dart.library);
  var step_indicator = Object.create(dart.library);
  var feature_screen = Object.create(dart.library);
  var investment_opportunity = Object.create(dart.library);
  var investment_service = Object.create(dart.library);
  var investment_card = Object.create(dart.library);
  var $toString = dartx.toString;
  var $isEmpty = dartx.isEmpty;
  var $_get = dartx._get;
  var $toStringAsFixed = dartx.toStringAsFixed;
  var $where = dartx.where;
  var $toList = dartx.toList;
  var $length = dartx.length;
  var $firstWhere = dartx.firstWhere;
  var $toInt = dartx.toInt;
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(false);
  var T = {
    VoidTovoid: () => (T.VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))(),
    ListOfString: () => (T.ListOfString = dart.constFn(core.List$(core.String)))(),
    ListOfStringTodynamic: () => (T.ListOfStringTodynamic = dart.constFn(dart.fnType(dart.dynamic, [T.ListOfString()])))(),
    JSArrayOfString: () => (T.JSArrayOfString = dart.constFn(_interceptors.JSArray$(core.String)))(),
    dynamicToNull: () => (T.dynamicToNull = dart.constFn(dart.fnType(core.Null, [dart.dynamic])))(),
    VoidToNull: () => (T.VoidToNull = dart.constFn(dart.fnType(core.Null, [])))(),
    ObjectAndStackTraceTovoid: () => (T.ObjectAndStackTraceTovoid = dart.constFn(dart.fnType(dart.void, [core.Object, core.StackTrace])))(),
    ZoneAndZoneDelegateAndZone__Tovoid: () => (T.ZoneAndZoneDelegateAndZone__Tovoid = dart.constFn(dart.fnType(dart.void, [async.Zone, async.ZoneDelegate, async.Zone, core.String])))(),
    JSArrayOfDeviceOrientation: () => (T.JSArrayOfDeviceOrientation = dart.constFn(_interceptors.JSArray$(system_chrome.DeviceOrientation)))(),
    GlobalKeyOfFormState: () => (T.GlobalKeyOfFormState = dart.constFn(framework.GlobalKey$(form.FormState)))(),
    BuildContextToDashboardScreen: () => (T.BuildContextToDashboardScreen = dart.constFn(dart.fnType(dashboard_screen.DashboardScreen, [framework.BuildContext])))(),
    BuildContextToRegistrationScreen: () => (T.BuildContextToRegistrationScreen = dart.constFn(dart.fnType(registration_screen.RegistrationScreen, [framework.BuildContext])))(),
    AnnotatedRegionOfSystemUiOverlayStyle: () => (T.AnnotatedRegionOfSystemUiOverlayStyle = dart.constFn(annotated_region.AnnotatedRegion$(system_chrome.SystemUiOverlayStyle)))(),
    StringN: () => (T.StringN = dart.constFn(dart.nullable(core.String)))(),
    StringNToStringN: () => (T.StringNToStringN = dart.constFn(dart.fnType(T.StringN(), [T.StringN()])))(),
    JSArrayOfWidget: () => (T.JSArrayOfWidget = dart.constFn(_interceptors.JSArray$(framework.Widget)))(),
    JSArrayOfGlobalKeyOfFormState: () => (T.JSArrayOfGlobalKeyOfFormState = dart.constFn(_interceptors.JSArray$(T.GlobalKeyOfFormState())))(),
    ObjectN: () => (T.ObjectN = dart.constFn(dart.nullable(core.Object)))(),
    JSArrayOfInlineSpan: () => (T.JSArrayOfInlineSpan = dart.constFn(_interceptors.JSArray$(inline_span.InlineSpan)))(),
    JSArrayOfTextInputFormatter: () => (T.JSArrayOfTextInputFormatter = dart.constFn(_interceptors.JSArray$(text_formatter.TextInputFormatter)))(),
    JSArrayOfBoxShadow: () => (T.JSArrayOfBoxShadow = dart.constFn(_interceptors.JSArray$(box_shadow.BoxShadow)))(),
    BuildContextToFeatureScreen: () => (T.BuildContextToFeatureScreen = dart.constFn(dart.fnType(feature_screen.FeatureScreen, [framework.BuildContext])))(),
    JSArrayOfInvestmentOpportunity: () => (T.JSArrayOfInvestmentOpportunity = dart.constFn(_interceptors.JSArray$(investment_opportunity.InvestmentOpportunity)))(),
    InvestmentOpportunityTobool: () => (T.InvestmentOpportunityTobool = dart.constFn(dart.fnType(core.bool, [investment_opportunity.InvestmentOpportunity])))(),
    BuildContextAndintToGestureDetector: () => (T.BuildContextAndintToGestureDetector = dart.constFn(dart.fnType(gesture_detector.GestureDetector, [framework.BuildContext, core.int])))(),
    BuildContextAndintToInvestmentCard: () => (T.BuildContextAndintToInvestmentCard = dart.constFn(dart.fnType(investment_card.InvestmentCard, [framework.BuildContext, core.int])))(),
    AlwaysStoppedAnimationOfColor: () => (T.AlwaysStoppedAnimationOfColor = dart.constFn(animations.AlwaysStoppedAnimation$(ui.Color)))(),
    BuildContextAndScrollControllerToContainer: () => (T.BuildContextAndScrollControllerToContainer = dart.constFn(dart.fnType(container.Container, [framework.BuildContext, scroll_controller.ScrollController])))(),
    BuildContextToDraggableScrollableSheet: () => (T.BuildContextToDraggableScrollableSheet = dart.constFn(dart.fnType(draggable_scrollable_sheet.DraggableScrollableSheet, [framework.BuildContext])))(),
    IdentityMapOfString$dynamic: () => (T.IdentityMapOfString$dynamic = dart.constFn(_js_helper.IdentityMap$(core.String, dart.dynamic)))(),
    ListOfInvestmentOpportunity: () => (T.ListOfInvestmentOpportunity = dart.constFn(core.List$(investment_opportunity.InvestmentOpportunity)))(),
    InvestmentOpportunityN: () => (T.InvestmentOpportunityN = dart.constFn(dart.nullable(investment_opportunity.InvestmentOpportunity)))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.fn(main.main, T.VoidTovoid());
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: ui.Brightness.prototype,
        [_Enum__name]: "dark",
        [_Enum_index]: 0
      });
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 0
      });
    },
    get C2() {
      return C[2] = dart.const({
        __proto__: system_chrome.SystemUiOverlayStyle.prototype,
        [SystemUiOverlayStyle_systemStatusBarContrastEnforced]: null,
        [SystemUiOverlayStyle_statusBarIconBrightness]: C[3] || CT.C3,
        [SystemUiOverlayStyle_statusBarBrightness]: null,
        [SystemUiOverlayStyle_statusBarColor]: C[4] || CT.C4,
        [SystemUiOverlayStyle_systemNavigationBarContrastEnforced]: null,
        [SystemUiOverlayStyle_systemNavigationBarIconBrightness]: null,
        [SystemUiOverlayStyle_systemNavigationBarDividerColor]: null,
        [SystemUiOverlayStyle_systemNavigationBarColor]: null
      });
    },
    get C6() {
      return C[6] = dart.const({
        __proto__: ui.FontWeight.prototype,
        [FontWeight_value]: 600,
        [FontWeight_index]: 5
      });
    },
    get C7() {
      return C[7] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4279900698
      });
    },
    get C5() {
      return C[5] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: 1.2,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: -0.5,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[6] || CT.C6,
        [TextStyle_fontSize]: 24,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[7] || CT.C7,
        [TextStyle_inherit]: true
      });
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: icon_theme_data.IconThemeData.prototype,
        [IconThemeData_shadows]: null,
        [IconThemeData__opacity]: null,
        [IconThemeData_color]: C[7] || CT.C7,
        [IconThemeData_opticalSize]: null,
        [IconThemeData_grade]: null,
        [IconThemeData_weight]: null,
        [IconThemeData_fill]: null,
        [IconThemeData_size]: null
      });
    },
    get C9() {
      return C[9] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294967295
      });
    },
    get C1() {
      return C[1] = dart.const({
        __proto__: app_bar_theme.AppBarTheme.prototype,
        [AppBarTheme_backwardsCompatibility]: null,
        [AppBarTheme_systemOverlayStyle]: C[2] || CT.C2,
        [AppBarTheme_titleTextStyle]: C[5] || CT.C5,
        [AppBarTheme_toolbarTextStyle]: null,
        [AppBarTheme_toolbarHeight]: null,
        [AppBarTheme_titleSpacing]: null,
        [AppBarTheme_centerTitle]: null,
        [AppBarTheme_textTheme]: null,
        [AppBarTheme_actionsIconTheme]: null,
        [AppBarTheme_iconTheme]: C[8] || CT.C8,
        [AppBarTheme_shape]: null,
        [AppBarTheme_surfaceTintColor]: null,
        [AppBarTheme_shadowColor]: null,
        [AppBarTheme_scrolledUnderElevation]: null,
        [AppBarTheme_elevation]: 0,
        [AppBarTheme_foregroundColor]: null,
        [AppBarTheme_backgroundColor]: C[9] || CT.C9,
        [AppBarTheme_brightness]: null
      });
    },
    get C10() {
      return C[10] = dart.const({
        __proto__: ui.Size.prototype,
        [OffsetBase__dy]: 56,
        [OffsetBase__dx]: 1 / 0
      });
    },
    get C12() {
      return C[12] = dart.const({
        __proto__: borders.BorderStyle.prototype,
        [_Enum__name]: "solid",
        [_Enum_index]: 1
      });
    },
    get C13() {
      return C[13] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4279911210
      });
    },
    get C11() {
      return C[11] = dart.const({
        __proto__: borders.BorderSide.prototype,
        [BorderSide_strokeAlign]: -1,
        [BorderSide_style]: C[12] || CT.C12,
        [BorderSide_width]: 1,
        [BorderSide_color]: C[13] || CT.C13
      });
    },
    get C14() {
      return C[14] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 16,
        [EdgeInsets_right]: 16,
        [EdgeInsets_top]: 16,
        [EdgeInsets_left]: 16
      });
    },
    get C16() {
      return C[16] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4292927712
      });
    },
    get C15() {
      return C[15] = dart.const({
        __proto__: borders.BorderSide.prototype,
        [BorderSide_strokeAlign]: -1,
        [BorderSide_style]: C[12] || CT.C12,
        [BorderSide_width]: 1,
        [BorderSide_color]: C[16] || CT.C16
      });
    },
    get C17() {
      return C[17] = dart.const({
        __proto__: borders.BorderSide.prototype,
        [BorderSide_strokeAlign]: -1,
        [BorderSide_style]: C[12] || CT.C12,
        [BorderSide_width]: 2,
        [BorderSide_color]: C[13] || CT.C13
      });
    },
    get C19() {
      return C[19] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4293212469
      });
    },
    get C18() {
      return C[18] = dart.const({
        __proto__: borders.BorderSide.prototype,
        [BorderSide_strokeAlign]: -1,
        [BorderSide_style]: C[12] || CT.C12,
        [BorderSide_width]: 1,
        [BorderSide_color]: C[19] || CT.C19
      });
    },
    get C20() {
      return C[20] = dart.const({
        __proto__: login_screen.LoginScreen.prototype,
        [Widget_key]: null
      });
    },
    get C21() {
      return C[21] = dart.const({
        __proto__: main.TanamiCapitalApp.prototype,
        [Widget_key]: null
      });
    },
    get C22() {
      return C[22] = dart.const({
        __proto__: dashboard_screen.DashboardScreen.prototype,
        [Widget_key]: null
      });
    },
    get C24() {
      return C[24] = dart.const({
        __proto__: ui.Clip.prototype,
        [_Enum__name]: "hardEdge",
        [_Enum_index]: 1
      });
    },
    get C25() {
      return C[25] = dart.const({
        __proto__: dismissible.DismissDirection.prototype,
        [_Enum__name]: "down",
        [_Enum_index]: 5
      });
    },
    get C26() {
      return C[26] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 4000000
      });
    },
    get C27() {
      return C[27] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "Login functionality would connect to backend"
      });
    },
    get C23() {
      return C[23] = dart.const({
        __proto__: snack_bar.SnackBar.prototype,
        [Widget_key]: null,
        [SnackBar_clipBehavior]: C[24] || CT.C24,
        [SnackBar_dismissDirection]: C[25] || CT.C25,
        [SnackBar_onVisible]: null,
        [SnackBar_animation]: null,
        [SnackBar_duration]: C[26] || CT.C26,
        [SnackBar_closeIconColor]: null,
        [SnackBar_showCloseIcon]: null,
        [SnackBar_action]: null,
        [SnackBar_behavior]: null,
        [SnackBar_shape]: null,
        [SnackBar_width]: null,
        [SnackBar_padding]: null,
        [SnackBar_margin]: null,
        [SnackBar_elevation]: null,
        [SnackBar_backgroundColor]: C[13] || CT.C13,
        [SnackBar_content]: C[27] || CT.C27
      });
    },
    get C28() {
      return C[28] = dart.const({
        __proto__: registration_screen.RegistrationScreen.prototype,
        [Widget_key]: null
      });
    },
    get C29() {
      return C[29] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 0,
        [EdgeInsets_right]: 24,
        [EdgeInsets_top]: 0,
        [EdgeInsets_left]: 24
      });
    },
    get C30() {
      return C[30] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 40,
        [SizedBox_width]: null
      });
    },
    get C31() {
      return C[31] = dart.const({
        __proto__: tanami_logo.TanamiLogo.prototype,
        [Widget_key]: null,
        [TanamiLogo_height]: 40
      });
    },
    get C32() {
      return C[32] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 60,
        [SizedBox_width]: null
      });
    },
    get C33() {
      return C[33] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 24,
        [SizedBox_width]: null
      });
    },
    get C34() {
      return C[34] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 16,
        [SizedBox_width]: null
      });
    },
    get C35() {
      return C[35] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 12,
        [SizedBox_width]: null
      });
    },
    get C38() {
      return C[38] = dart.const({
        __proto__: ui.FontWeight.prototype,
        [FontWeight_value]: 500,
        [FontWeight_index]: 4
      });
    },
    get C37() {
      return C[37] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[38] || CT.C38,
        [TextStyle_fontSize]: null,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[13] || CT.C13,
        [TextStyle_inherit]: true
      });
    },
    get C36() {
      return C[36] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[37] || CT.C37,
        [Text_textSpan]: null,
        [Text_data]: "Forgot password?"
      });
    },
    get C39() {
      return C[39] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 32,
        [SizedBox_width]: null
      });
    },
    get C40() {
      return C[40] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4281034051
      });
    },
    get C41() {
      return C[41] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4293456620
      });
    },
    get C42() {
      return C[42] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4283453520
      });
    },
    get C43() {
      return C[43] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4287401100
      });
    },
    get C44() {
      return C[44] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4293848814
      });
    },
    get C45() {
      return C[45] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4283215696
      });
    },
    get C46() {
      return C[46] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294309365
      });
    },
    get C47() {
      return C[47] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: 1.3,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[6] || CT.C6,
        [TextStyle_fontSize]: 20,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[7] || CT.C7,
        [TextStyle_inherit]: true
      });
    },
    get C49() {
      return C[49] = dart.const({
        __proto__: ui.FontWeight.prototype,
        [FontWeight_value]: 400,
        [FontWeight_index]: 3
      });
    },
    get C48() {
      return C[48] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: 1.5,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[49] || CT.C49,
        [TextStyle_fontSize]: 16,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[7] || CT.C7,
        [TextStyle_inherit]: true
      });
    },
    get C50() {
      return C[50] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: 1.5,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[49] || CT.C49,
        [TextStyle_fontSize]: 14,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[42] || CT.C42,
        [TextStyle_inherit]: true
      });
    },
    get C51() {
      return C[51] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: 1.5,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[49] || CT.C49,
        [TextStyle_fontSize]: 12,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[43] || CT.C43,
        [TextStyle_inherit]: true
      });
    },
    get C52() {
      return C[52] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[38] || CT.C38,
        [TextStyle_fontSize]: 14,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[42] || CT.C42,
        [TextStyle_inherit]: true
      });
    },
    get C53() {
      return C[53] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[49] || CT.C49,
        [TextStyle_fontSize]: 14,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[43] || CT.C43,
        [TextStyle_inherit]: true
      });
    },
    get C54() {
      return C[54] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[49] || CT.C49,
        [TextStyle_fontSize]: 16,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[7] || CT.C7,
        [TextStyle_inherit]: true
      });
    },
    get C55() {
      return C[55] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: 0.3,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[6] || CT.C6,
        [TextStyle_fontSize]: 16,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: null,
        [TextStyle_inherit]: true
      });
    },
    get C57() {
      return C[57] = dart.const({
        __proto__: ui.FontStyle.prototype,
        [_Enum__name]: "italic",
        [_Enum_index]: 1
      });
    },
    get C56() {
      return C[56] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: 1.4,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: C[57] || CT.C57,
        [TextStyle_fontWeight]: C[38] || CT.C38,
        [TextStyle_fontSize]: 18,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[7] || CT.C7,
        [TextStyle_inherit]: true
      });
    },
    get C58() {
      return C[58] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[6] || CT.C6,
        [TextStyle_fontSize]: 16,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[9] || CT.C9,
        [TextStyle_inherit]: true
      });
    },
    get C59() {
      return C[59] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: 1.4,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[49] || CT.C49,
        [TextStyle_fontSize]: 14,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[9] || CT.C9,
        [TextStyle_inherit]: true
      });
    },
    get C61() {
      return C[61] = dart.const({
        __proto__: custom_button.ButtonType.prototype,
        [_Enum__name]: "filled",
        [_Enum_index]: 0
      });
    },
    get C62() {
      return C[62] = dart.const({
        __proto__: custom_button.ButtonType.prototype,
        [_Enum__name]: "outlined",
        [_Enum_index]: 1
      });
    },
    get C60() {
      return C[60] = dart.constList([C[61] || CT.C61, C[62] || CT.C62], custom_button.ButtonType);
    },
    get C65() {
      return C[65] = dart.const({
        __proto__: progress_indicator._ActivityIndicatorType.prototype,
        [_Enum__name]: "material",
        [_Enum_index]: 0
      });
    },
    get C64() {
      return C[64] = dart.const({
        __proto__: progress_indicator.CircularProgressIndicator.prototype,
        [Widget_key]: null,
        [ProgressIndicator_semanticsValue]: null,
        [ProgressIndicator_semanticsLabel]: null,
        [ProgressIndicator_valueColor]: null,
        [ProgressIndicator_color]: C[9] || CT.C9,
        [ProgressIndicator_backgroundColor]: null,
        [ProgressIndicator_value]: null,
        [CircularProgressIndicator_strokeWidth]: 3,
        [CircularProgressIndicator__indicatorType]: C[65] || CT.C65
      });
    },
    get C63() {
      return C[63] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: C[64] || CT.C64,
        [SizedBox_height]: 24,
        [SizedBox_width]: 24
      });
    },
    get C67() {
      return C[67] = dart.const({
        __proto__: progress_indicator.CircularProgressIndicator.prototype,
        [Widget_key]: null,
        [ProgressIndicator_semanticsValue]: null,
        [ProgressIndicator_semanticsLabel]: null,
        [ProgressIndicator_valueColor]: null,
        [ProgressIndicator_color]: C[13] || CT.C13,
        [ProgressIndicator_backgroundColor]: null,
        [ProgressIndicator_value]: null,
        [CircularProgressIndicator_strokeWidth]: 3,
        [CircularProgressIndicator__indicatorType]: C[65] || CT.C65
      });
    },
    get C66() {
      return C[66] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: C[67] || CT.C67,
        [SizedBox_height]: 24,
        [SizedBox_width]: 24
      });
    },
    get C68() {
      return C[68] = dart.const({
        __proto__: text_input.TextInputType.prototype,
        [TextInputType_decimal]: null,
        [TextInputType_signed]: null,
        [TextInputType_index]: 0
      });
    },
    get C69() {
      return C[69] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 8,
        [SizedBox_width]: null
      });
    },
    get C70() {
      return C[70] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 14,
        [EdgeInsets_right]: 16,
        [EdgeInsets_top]: 14,
        [EdgeInsets_left]: 16
      });
    },
    get C71() {
      return C[71] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: null,
        [TextStyle_fontSize]: 12,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[19] || CT.C19,
        [TextStyle_inherit]: true
      });
    },
    get C72() {
      return C[72] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: null,
        [SizedBox_width]: 8
      });
    },
    get C74() {
      return C[74] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "Registration successful! You can now log in."
      });
    },
    get C73() {
      return C[73] = dart.const({
        __proto__: snack_bar.SnackBar.prototype,
        [Widget_key]: null,
        [SnackBar_clipBehavior]: C[24] || CT.C24,
        [SnackBar_dismissDirection]: C[25] || CT.C25,
        [SnackBar_onVisible]: null,
        [SnackBar_animation]: null,
        [SnackBar_duration]: C[26] || CT.C26,
        [SnackBar_closeIconColor]: null,
        [SnackBar_showCloseIcon]: null,
        [SnackBar_action]: null,
        [SnackBar_behavior]: null,
        [SnackBar_shape]: null,
        [SnackBar_width]: null,
        [SnackBar_padding]: null,
        [SnackBar_margin]: null,
        [SnackBar_elevation]: null,
        [SnackBar_backgroundColor]: C[45] || CT.C45,
        [SnackBar_content]: C[74] || CT.C74
      });
    },
    get C76() {
      return C[76] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: true,
        [IconData_fontPackage]: null,
        [IconData_fontFamily]: "MaterialIcons",
        [IconData_codePoint]: 57491
      });
    },
    get C75() {
      return C[75] = dart.const({
        __proto__: icon.Icon.prototype,
        [Widget_key]: null,
        [Icon_textDirection]: null,
        [Icon_semanticLabel]: null,
        [Icon_shadows]: null,
        [Icon_color]: null,
        [Icon_opticalSize]: null,
        [Icon_grade]: null,
        [Icon_weight]: null,
        [Icon_fill]: null,
        [Icon_size]: 20,
        [Icon_icon]: C[76] || CT.C76
      });
    },
    get C79() {
      return C[79] = dart.const({
        __proto__: tanami_logo.TanamiLogo.prototype,
        [Widget_key]: null,
        [TanamiLogo_height]: 30
      });
    },
    get C80() {
      return C[80] = dart.const({
        __proto__: alignment.Alignment.prototype,
        [Alignment_y]: 0,
        [Alignment_x]: 0
      });
    },
    get C78() {
      return C[78] = dart.const({
        __proto__: basic.Center.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: C[79] || CT.C79,
        [Align_heightFactor]: null,
        [Align_widthFactor]: null,
        [Align_alignment]: C[80] || CT.C80
      });
    },
    get C81() {
      return C[81] = dart.const({
        __proto__: flex.FlexFit.prototype,
        [_Enum__name]: "tight",
        [_Enum_index]: 0
      });
    },
    get C77() {
      return C[77] = dart.const({
        __proto__: basic.Expanded.prototype,
        [Widget_key]: null,
        [ProxyWidget_child]: C[78] || CT.C78,
        [Flexible_fit]: C[81] || CT.C81,
        [Flexible_flex]: 1
      });
    },
    get C82() {
      return C[82] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: null,
        [SizedBox_width]: 48
      });
    },
    get C83() {
      return C[83] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 24,
        [EdgeInsets_right]: 24,
        [EdgeInsets_top]: 24,
        [EdgeInsets_left]: 24
      });
    },
    get C84() {
      return C[84] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 24,
        [EdgeInsets_right]: 0,
        [EdgeInsets_top]: 24,
        [EdgeInsets_left]: 0
      });
    },
    get C85() {
      return C[85] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 0,
        [SizedBox_width]: 0
      });
    },
    get C87() {
      return C[87] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: null,
        [IconData_fontFamily]: "MaterialIcons",
        [IconData_codePoint]: 57496
      });
    },
    get C86() {
      return C[86] = dart.const({
        __proto__: icon.Icon.prototype,
        [Widget_key]: null,
        [Icon_textDirection]: null,
        [Icon_semanticLabel]: null,
        [Icon_shadows]: null,
        [Icon_color]: C[42] || CT.C42,
        [Icon_opticalSize]: null,
        [Icon_grade]: null,
        [Icon_weight]: null,
        [Icon_fill]: null,
        [Icon_size]: null,
        [Icon_icon]: C[87] || CT.C87
      });
    },
    get C89() {
      return C[89] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: null,
        [IconData_fontFamily]: "MaterialIcons",
        [IconData_codePoint]: 62007
      });
    },
    get C88() {
      return C[88] = dart.const({
        __proto__: icon.Icon.prototype,
        [Widget_key]: null,
        [Icon_textDirection]: null,
        [Icon_semanticLabel]: null,
        [Icon_shadows]: null,
        [Icon_color]: C[9] || CT.C9,
        [Icon_opticalSize]: null,
        [Icon_grade]: null,
        [Icon_weight]: null,
        [Icon_fill]: null,
        [Icon_size]: null,
        [Icon_icon]: C[89] || CT.C89
      });
    },
    get C91() {
      return C[91] = dart.const({
        __proto__: ui.Brightness.prototype,
        [_Enum__name]: "light",
        [_Enum_index]: 1
      });
    },
    get C90() {
      return C[90] = dart.const({
        __proto__: system_chrome.SystemUiOverlayStyle.prototype,
        [SystemUiOverlayStyle_systemStatusBarContrastEnforced]: null,
        [SystemUiOverlayStyle_statusBarIconBrightness]: C[91] || CT.C91,
        [SystemUiOverlayStyle_statusBarBrightness]: null,
        [SystemUiOverlayStyle_statusBarColor]: C[13] || CT.C13,
        [SystemUiOverlayStyle_systemNavigationBarContrastEnforced]: null,
        [SystemUiOverlayStyle_systemNavigationBarIconBrightness]: null,
        [SystemUiOverlayStyle_systemNavigationBarDividerColor]: null,
        [SystemUiOverlayStyle_systemNavigationBarColor]: null
      });
    },
    get C92() {
      return C[92] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 30,
        [EdgeInsets_right]: 24,
        [EdgeInsets_top]: 20,
        [EdgeInsets_left]: 24
      });
    },
    get C94() {
      return C[94] = dart.const({
        __proto__: box_border.BoxShape.prototype,
        [_Enum__name]: "rectangle",
        [_Enum_index]: 0
      });
    },
    get C96() {
      return C[96] = dart.const({
        __proto__: ui.Radius.prototype,
        [Radius_y]: 24,
        [Radius_x]: 24
      });
    },
    get C97() {
      return C[97] = dart.const({
        __proto__: ui.Radius.prototype,
        [Radius_y]: 0,
        [Radius_x]: 0
      });
    },
    get C95() {
      return C[95] = dart.const({
        __proto__: border_radius.BorderRadius.prototype,
        [BorderRadius_bottomRight]: C[96] || CT.C96,
        [BorderRadius_bottomLeft]: C[96] || CT.C96,
        [BorderRadius_topRight]: C[97] || CT.C97,
        [BorderRadius_topLeft]: C[97] || CT.C97
      });
    },
    get C93() {
      return C[93] = dart.const({
        __proto__: box_decoration.BoxDecoration.prototype,
        [BoxDecoration_shape]: C[94] || CT.C94,
        [BoxDecoration_backgroundBlendMode]: null,
        [BoxDecoration_gradient]: null,
        [BoxDecoration_boxShadow]: null,
        [BoxDecoration_borderRadius]: C[95] || CT.C95,
        [BoxDecoration_border]: null,
        [BoxDecoration_image]: null,
        [BoxDecoration_color]: C[13] || CT.C13
      });
    },
    get C100() {
      return C[100] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 3019898879
      });
    },
    get C99() {
      return C[99] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: null,
        [TextStyle_fontSize]: 14,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[100] || CT.C100,
        [TextStyle_inherit]: true
      });
    },
    get C98() {
      return C[98] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[99] || CT.C99,
        [Text_textSpan]: null,
        [Text_data]: "Your portfolio summary"
      });
    },
    get C101() {
      return C[101] = dart.const({
        __proto__: ui.Offset.prototype,
        [OffsetBase__dy]: 5,
        [OffsetBase__dx]: 0
      });
    },
    get C102() {
      return C[102] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[52] || CT.C52,
        [Text_textSpan]: null,
        [Text_data]: "Portfolio Value"
      });
    },
    get C104() {
      return C[104] = dart.const({
        __proto__: ui.FontWeight.prototype,
        [FontWeight_value]: 700,
        [FontWeight_index]: 6
      });
    },
    get C103() {
      return C[103] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[104] || CT.C104,
        [TextStyle_fontSize]: 24,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[7] || CT.C7,
        [TextStyle_inherit]: true
      });
    },
    get C106() {
      return C[106] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[104] || CT.C104,
        [TextStyle_fontSize]: 18,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[7] || CT.C7,
        [TextStyle_inherit]: true
      });
    },
    get C105() {
      return C[105] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[106] || CT.C106,
        [Text_textSpan]: null,
        [Text_data]: "Your Investments"
      });
    },
    get C107() {
      return C[107] = dart.const({
        __proto__: feature_screen.FeatureScreen.prototype,
        [Widget_key]: null
      });
    },
    get C109() {
      return C[109] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[6] || CT.C6,
        [TextStyle_fontSize]: null,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[13] || CT.C13,
        [TextStyle_inherit]: true
      });
    },
    get C108() {
      return C[108] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[109] || CT.C109,
        [Text_textSpan]: null,
        [Text_data]: "View All"
      });
    },
    get C110() {
      return C[110] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 20,
        [EdgeInsets_right]: 20,
        [EdgeInsets_top]: 20,
        [EdgeInsets_left]: 20
      });
    },
    get C111() {
      return C[111] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 6,
        [EdgeInsets_right]: 6,
        [EdgeInsets_top]: 6,
        [EdgeInsets_left]: 6
      });
    },
    get C113() {
      return C[113] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: null,
        [IconData_fontFamily]: "MaterialIcons",
        [IconData_codePoint]: 57634
      });
    },
    get C112() {
      return C[112] = dart.const({
        __proto__: icon.Icon.prototype,
        [Widget_key]: null,
        [Icon_textDirection]: null,
        [Icon_semanticLabel]: null,
        [Icon_shadows]: null,
        [Icon_color]: C[9] || CT.C9,
        [Icon_opticalSize]: null,
        [Icon_grade]: null,
        [Icon_weight]: null,
        [Icon_fill]: null,
        [Icon_size]: 14,
        [Icon_icon]: C[113] || CT.C113
      });
    },
    get C115() {
      return C[115] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: null,
        [TextStyle_fontSize]: 12,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[100] || CT.C100,
        [TextStyle_inherit]: true
      });
    },
    get C114() {
      return C[114] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[115] || CT.C115,
        [Text_textSpan]: null,
        [Text_data]: "June 20 2024"
      });
    },
    get C117() {
      return C[117] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[104] || CT.C104,
        [TextStyle_fontSize]: 18,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[9] || CT.C9,
        [TextStyle_inherit]: true
      });
    },
    get C116() {
      return C[116] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[117] || CT.C117,
        [Text_textSpan]: null,
        [Text_data]: "Infrastructure Fund IV"
      });
    },
    get C119() {
      return C[119] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 1040187391
      });
    },
    get C118() {
      return C[118] = dart.const({
        __proto__: divider.Divider.prototype,
        [Widget_key]: null,
        [Divider_color]: C[119] || CT.C119,
        [Divider_endIndent]: null,
        [Divider_indent]: null,
        [Divider_thickness]: null,
        [Divider_height]: 30
      });
    },
    get C120() {
      return C[120] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: null,
        [SizedBox_width]: 16
      });
    },
    get C121() {
      return C[121] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 30,
        [SizedBox_width]: null
      });
    },
    get C125() {
      return C[125] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: null,
        [IconData_fontFamily]: "MaterialIcons",
        [IconData_codePoint]: 57777
      });
    },
    get C124() {
      return C[124] = dart.const({
        __proto__: icon.Icon.prototype,
        [Widget_key]: null,
        [Icon_textDirection]: null,
        [Icon_semanticLabel]: null,
        [Icon_shadows]: null,
        [Icon_color]: null,
        [Icon_opticalSize]: null,
        [Icon_grade]: null,
        [Icon_weight]: null,
        [Icon_fill]: null,
        [Icon_size]: null,
        [Icon_icon]: C[125] || CT.C125
      });
    },
    get C123() {
      return C[123] = dart.const({
        __proto__: bottom_navigation_bar_item.BottomNavigationBarItem.prototype,
        [BottomNavigationBarItem_tooltip]: null,
        [BottomNavigationBarItem_backgroundColor]: null,
        [BottomNavigationBarItem_label]: "Dashboard",
        [BottomNavigationBarItem_activeIcon]: C[124] || CT.C124,
        [BottomNavigationBarItem_icon]: C[124] || CT.C124
      });
    },
    get C128() {
      return C[128] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: true,
        [IconData_fontPackage]: null,
        [IconData_fontFamily]: "MaterialIcons",
        [IconData_codePoint]: 58783
      });
    },
    get C127() {
      return C[127] = dart.const({
        __proto__: icon.Icon.prototype,
        [Widget_key]: null,
        [Icon_textDirection]: null,
        [Icon_semanticLabel]: null,
        [Icon_shadows]: null,
        [Icon_color]: null,
        [Icon_opticalSize]: null,
        [Icon_grade]: null,
        [Icon_weight]: null,
        [Icon_fill]: null,
        [Icon_size]: null,
        [Icon_icon]: C[128] || CT.C128
      });
    },
    get C126() {
      return C[126] = dart.const({
        __proto__: bottom_navigation_bar_item.BottomNavigationBarItem.prototype,
        [BottomNavigationBarItem_tooltip]: null,
        [BottomNavigationBarItem_backgroundColor]: null,
        [BottomNavigationBarItem_label]: "Investments",
        [BottomNavigationBarItem_activeIcon]: C[127] || CT.C127,
        [BottomNavigationBarItem_icon]: C[127] || CT.C127
      });
    },
    get C131() {
      return C[131] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: null,
        [IconData_fontFamily]: "MaterialIcons",
        [IconData_codePoint]: 57411
      });
    },
    get C130() {
      return C[130] = dart.const({
        __proto__: icon.Icon.prototype,
        [Widget_key]: null,
        [Icon_textDirection]: null,
        [Icon_semanticLabel]: null,
        [Icon_shadows]: null,
        [Icon_color]: null,
        [Icon_opticalSize]: null,
        [Icon_grade]: null,
        [Icon_weight]: null,
        [Icon_fill]: null,
        [Icon_size]: null,
        [Icon_icon]: C[131] || CT.C131
      });
    },
    get C129() {
      return C[129] = dart.const({
        __proto__: bottom_navigation_bar_item.BottomNavigationBarItem.prototype,
        [BottomNavigationBarItem_tooltip]: null,
        [BottomNavigationBarItem_backgroundColor]: null,
        [BottomNavigationBarItem_label]: "Profile",
        [BottomNavigationBarItem_activeIcon]: C[130] || CT.C130,
        [BottomNavigationBarItem_icon]: C[130] || CT.C130
      });
    },
    get C122() {
      return C[122] = dart.constList([C[123] || CT.C123, C[126] || CT.C126, C[129] || CT.C129], bottom_navigation_bar_item.BottomNavigationBarItem);
    },
    get C132() {
      return C[132] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: null,
        [TextStyle_fontSize]: 12,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[42] || CT.C42,
        [TextStyle_inherit]: true
      });
    },
    get C133() {
      return C[133] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 4,
        [SizedBox_width]: null
      });
    },
    get C134() {
      return C[134] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[104] || CT.C104,
        [TextStyle_fontSize]: 14,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[9] || CT.C9,
        [TextStyle_inherit]: true
      });
    },
    get C135() {
      return C[135] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: null,
        [SizedBox_width]: 12
      });
    },
    get C136() {
      return C[136] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "Investment Opportunities"
      });
    },
    get C137() {
      return C[137] = dart.const({
        __proto__: system_chrome.SystemUiOverlayStyle.prototype,
        [SystemUiOverlayStyle_systemStatusBarContrastEnforced]: null,
        [SystemUiOverlayStyle_statusBarIconBrightness]: C[91] || CT.C91,
        [SystemUiOverlayStyle_statusBarBrightness]: null,
        [SystemUiOverlayStyle_statusBarColor]: C[4] || CT.C4,
        [SystemUiOverlayStyle_systemNavigationBarContrastEnforced]: null,
        [SystemUiOverlayStyle_systemNavigationBarIconBrightness]: null,
        [SystemUiOverlayStyle_systemNavigationBarDividerColor]: null,
        [SystemUiOverlayStyle_systemNavigationBarColor]: null
      });
    },
    get C138() {
      return C[138] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 8,
        [EdgeInsets_right]: 0,
        [EdgeInsets_top]: 8,
        [EdgeInsets_left]: 0
      });
    },
    get C139() {
      return C[139] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 0,
        [EdgeInsets_right]: 16,
        [EdgeInsets_top]: 0,
        [EdgeInsets_left]: 16
      });
    },
    get C140() {
      return C[140] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 0,
        [EdgeInsets_right]: 12,
        [EdgeInsets_top]: 0,
        [EdgeInsets_left]: 0
      });
    },
    get C141() {
      return C[141] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 8,
        [EdgeInsets_right]: 16,
        [EdgeInsets_top]: 8,
        [EdgeInsets_left]: 16
      });
    },
    get C143() {
      return C[143] = dart.const({
        __proto__: progress_indicator.CircularProgressIndicator.prototype,
        [Widget_key]: null,
        [ProgressIndicator_semanticsValue]: null,
        [ProgressIndicator_semanticsLabel]: null,
        [ProgressIndicator_valueColor]: null,
        [ProgressIndicator_color]: C[13] || CT.C13,
        [ProgressIndicator_backgroundColor]: null,
        [ProgressIndicator_value]: null,
        [CircularProgressIndicator_strokeWidth]: 4,
        [CircularProgressIndicator__indicatorType]: C[65] || CT.C65
      });
    },
    get C142() {
      return C[142] = dart.const({
        __proto__: basic.Center.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: C[143] || CT.C143,
        [Align_heightFactor]: null,
        [Align_widthFactor]: null,
        [Align_alignment]: C[80] || CT.C80
      });
    },
    get C145() {
      return C[145] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: null,
        [IconData_fontFamily]: "MaterialIcons",
        [IconData_codePoint]: 58728
      });
    },
    get C144() {
      return C[144] = dart.const({
        __proto__: icon.Icon.prototype,
        [Widget_key]: null,
        [Icon_textDirection]: null,
        [Icon_semanticLabel]: null,
        [Icon_shadows]: null,
        [Icon_color]: C[42] || CT.C42,
        [Icon_opticalSize]: null,
        [Icon_grade]: null,
        [Icon_weight]: null,
        [Icon_fill]: null,
        [Icon_size]: 48,
        [Icon_icon]: C[145] || CT.C145
      });
    },
    get C147() {
      return C[147] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: null,
        [TextStyle_fontSize]: 16,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[42] || CT.C42,
        [TextStyle_inherit]: true
      });
    },
    get C146() {
      return C[146] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[147] || CT.C147,
        [Text_textSpan]: null,
        [Text_data]: "No investments found"
      });
    },
    get C148() {
      return C[148] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 24,
        [EdgeInsets_right]: 0,
        [EdgeInsets_top]: 8,
        [EdgeInsets_left]: 0
      });
    },
    get C150() {
      return C[150] = dart.const({
        __proto__: border_radius.BorderRadius.prototype,
        [BorderRadius_bottomRight]: C[97] || CT.C97,
        [BorderRadius_bottomLeft]: C[97] || CT.C97,
        [BorderRadius_topRight]: C[96] || CT.C96,
        [BorderRadius_topLeft]: C[96] || CT.C96
      });
    },
    get C149() {
      return C[149] = dart.const({
        __proto__: box_decoration.BoxDecoration.prototype,
        [BoxDecoration_shape]: C[94] || CT.C94,
        [BoxDecoration_backgroundBlendMode]: null,
        [BoxDecoration_gradient]: null,
        [BoxDecoration_boxShadow]: null,
        [BoxDecoration_borderRadius]: C[150] || CT.C150,
        [BoxDecoration_border]: null,
        [BoxDecoration_image]: null,
        [BoxDecoration_color]: C[9] || CT.C9
      });
    },
    get C151() {
      return C[151] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 8,
        [EdgeInsets_right]: 0,
        [EdgeInsets_top]: 12,
        [EdgeInsets_left]: 0
      });
    },
    get C152() {
      return C[152] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 12,
        [EdgeInsets_right]: 12,
        [EdgeInsets_top]: 12,
        [EdgeInsets_left]: 12
      });
    },
    get C154() {
      return C[154] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: null,
        [IconData_fontFamily]: "MaterialIcons",
        [IconData_codePoint]: 57627
      });
    },
    get C153() {
      return C[153] = dart.const({
        __proto__: icon.Icon.prototype,
        [Widget_key]: null,
        [Icon_textDirection]: null,
        [Icon_semanticLabel]: null,
        [Icon_shadows]: null,
        [Icon_color]: C[13] || CT.C13,
        [Icon_opticalSize]: null,
        [Icon_grade]: null,
        [Icon_weight]: null,
        [Icon_fill]: null,
        [Icon_size]: 24,
        [Icon_icon]: C[154] || CT.C154
      });
    },
    get C155() {
      return C[155] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[104] || CT.C104,
        [TextStyle_fontSize]: 20,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[7] || CT.C7,
        [TextStyle_inherit]: true
      });
    },
    get C156() {
      return C[156] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: null,
        [TextStyle_fontSize]: 14,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[42] || CT.C42,
        [TextStyle_inherit]: true
      });
    },
    get C158() {
      return C[158] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[104] || CT.C104,
        [TextStyle_fontSize]: 16,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[7] || CT.C7,
        [TextStyle_inherit]: true
      });
    },
    get C157() {
      return C[157] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[158] || CT.C158,
        [Text_textSpan]: null,
        [Text_data]: "About this investment"
      });
    },
    get C159() {
      return C[159] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: 1.5,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: null,
        [TextStyle_fontSize]: 14,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[42] || CT.C42,
        [TextStyle_inherit]: true
      });
    },
    get C160() {
      return C[160] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[158] || CT.C158,
        [Text_textSpan]: null,
        [Text_data]: "Key Details"
      });
    },
    get C161() {
      return C[161] = dart.const({
        __proto__: divider.Divider.prototype,
        [Widget_key]: null,
        [Divider_color]: null,
        [Divider_endIndent]: null,
        [Divider_indent]: null,
        [Divider_thickness]: null,
        [Divider_height]: 24
      });
    },
    get C162() {
      return C[162] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[158] || CT.C158,
        [Text_textSpan]: null,
        [Text_data]: "Funding Progress"
      });
    },
    get C163() {
      return C[163] = dart.const({
        __proto__: T.AlwaysStoppedAnimationOfColor().prototype,
        [AlwaysStoppedAnimation_value]: C[13] || CT.C13
      });
    },
    get C164() {
      return C[164] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[104] || CT.C104,
        [TextStyle_fontSize]: null,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[13] || CT.C13,
        [TextStyle_inherit]: true
      });
    },
    get C165() {
      return C[165] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: null,
        [TextStyle_fontSize]: null,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[42] || CT.C42,
        [TextStyle_inherit]: true
      });
    },
    get C167() {
      return C[167] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "Investment functionality would be implemented here"
      });
    },
    get C166() {
      return C[166] = dart.const({
        __proto__: snack_bar.SnackBar.prototype,
        [Widget_key]: null,
        [SnackBar_clipBehavior]: C[24] || CT.C24,
        [SnackBar_dismissDirection]: C[25] || CT.C25,
        [SnackBar_onVisible]: null,
        [SnackBar_animation]: null,
        [SnackBar_duration]: C[26] || CT.C26,
        [SnackBar_closeIconColor]: null,
        [SnackBar_showCloseIcon]: null,
        [SnackBar_action]: null,
        [SnackBar_behavior]: null,
        [SnackBar_shape]: null,
        [SnackBar_width]: null,
        [SnackBar_padding]: null,
        [SnackBar_margin]: null,
        [SnackBar_elevation]: null,
        [SnackBar_backgroundColor]: C[13] || CT.C13,
        [SnackBar_content]: C[167] || CT.C167
      });
    },
    get C169() {
      return C[169] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "Investment saved for later"
      });
    },
    get C168() {
      return C[168] = dart.const({
        __proto__: snack_bar.SnackBar.prototype,
        [Widget_key]: null,
        [SnackBar_clipBehavior]: C[24] || CT.C24,
        [SnackBar_dismissDirection]: C[25] || CT.C25,
        [SnackBar_onVisible]: null,
        [SnackBar_animation]: null,
        [SnackBar_duration]: C[26] || CT.C26,
        [SnackBar_closeIconColor]: null,
        [SnackBar_showCloseIcon]: null,
        [SnackBar_action]: null,
        [SnackBar_behavior]: null,
        [SnackBar_shape]: null,
        [SnackBar_width]: null,
        [SnackBar_padding]: null,
        [SnackBar_margin]: null,
        [SnackBar_elevation]: null,
        [SnackBar_backgroundColor]: C[40] || CT.C40,
        [SnackBar_content]: C[169] || CT.C169
      });
    },
    get C170() {
      return C[170] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[6] || CT.C6,
        [TextStyle_fontSize]: 14,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[7] || CT.C7,
        [TextStyle_inherit]: true
      });
    },
    get C171() {
      return C[171] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 1000000
      });
    },
    get C172() {
      return C[172] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 8,
        [EdgeInsets_right]: 24,
        [EdgeInsets_top]: 8,
        [EdgeInsets_left]: 24
      });
    },
    get C173() {
      return C[173] = dart.const({
        __proto__: ui.Offset.prototype,
        [OffsetBase__dy]: 4,
        [OffsetBase__dx]: 0
      });
    },
    get C175() {
      return C[175] = dart.const({
        __proto__: ui.Radius.prototype,
        [Radius_y]: 16,
        [Radius_x]: 16
      });
    },
    get C174() {
      return C[174] = dart.const({
        __proto__: border_radius.BorderRadius.prototype,
        [BorderRadius_bottomRight]: C[97] || CT.C97,
        [BorderRadius_bottomLeft]: C[97] || CT.C97,
        [BorderRadius_topRight]: C[175] || CT.C175,
        [BorderRadius_topLeft]: C[175] || CT.C175
      });
    },
    get C176() {
      return C[176] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 4,
        [EdgeInsets_right]: 8,
        [EdgeInsets_top]: 4,
        [EdgeInsets_left]: 8
      });
    },
    get C177() {
      return C[177] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[38] || CT.C38,
        [TextStyle_fontSize]: 12,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[9] || CT.C9,
        [TextStyle_inherit]: true
      });
    },
    get C178() {
      return C[178] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[6] || CT.C6,
        [TextStyle_fontSize]: 12,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[42] || CT.C42,
        [TextStyle_inherit]: true
      });
    },
    get C180() {
      return C[180] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: null,
        [IconData_fontFamily]: "MaterialIcons",
        [IconData_codePoint]: 57402
      });
    },
    get C179() {
      return C[179] = dart.const({
        __proto__: icon.Icon.prototype,
        [Widget_key]: null,
        [Icon_textDirection]: null,
        [Icon_semanticLabel]: null,
        [Icon_shadows]: null,
        [Icon_color]: C[42] || CT.C42,
        [Icon_opticalSize]: null,
        [Icon_grade]: null,
        [Icon_weight]: null,
        [Icon_fill]: null,
        [Icon_size]: 16,
        [Icon_icon]: C[180] || CT.C180
      });
    },
    get C181() {
      return C[181] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: null,
        [SizedBox_width]: 4
      });
    }
  }, false);
  var C = Array(182).fill(void 0);
  var I = [
    "file:///zapp/project/lib/main.dart",
    "file:///zapp/project/lib/screens/login_screen.dart",
    "file:///zapp/project/lib/theme/colors.dart",
    "file:///zapp/project/lib/theme/text_styles.dart",
    "file:///zapp/project/lib/widgets/custom_button.dart",
    "file:///zapp/project/lib/widgets/custom_text_field.dart",
    "file:///zapp/project/lib/assets/tanami_logo.dart",
    "file:///zapp/project/lib/screens/registration_screen.dart",
    "file:///zapp/project/lib/screens/dashboard_screen.dart",
    "file:///zapp/project/lib/widgets/step_indicator.dart",
    "file:///zapp/project/lib/screens/feature_screen.dart",
    "file:///zapp/project/lib/models/investment_opportunity.dart",
    "file:///zapp/project/lib/services/investment_service.dart",
    "file:///zapp/project/lib/widgets/investment_card.dart"
  ];
  $46zapp_entry.runAppGuarded = function runAppGuarded() {
    async.runZonedGuarded(core.Null, dart.fn(() => {
      if (T.ListOfStringTodynamic().is(C[0] || CT.C0)) {
        T.ListOfStringTodynamic().as(C[0] || CT.C0)(T.JSArrayOfString().of([]));
      } else {
        (C[0] || CT.C0)();
      }
      if (js.context.hasProperty("__notifyFlutterRendered")) {
        async.Future.delayed(new core.Duration.new({milliseconds: 250})).then(core.Null, dart.fn(_ => {
          js.context.callMethod("__notifyFlutterRendered", [false]);
        }, T.dynamicToNull()));
      }
    }, T.VoidToNull()), dart.fn((e, stackTrace) => {
      if (js.context.hasProperty("zappHandlerUserError")) {
        js.context.callMethod("zappHandlerUserError", [e[$toString](), stackTrace.toString()]);
      }
    }, T.ObjectAndStackTraceTovoid()), {zoneSpecification: new async._ZoneSpecification.new({print: dart.fn((self, parent, zone, line) => {
          if (js.context.hasProperty("zappHandlerUserPrint")) {
            js.context.callMethod("zappHandlerUserPrint", [line]);
          }
        }, T.ZoneAndZoneDelegateAndZone__Tovoid())})});
  };
  $46zapp_entry.main = function main$() {
    return async.async(dart.void, function* main() {
      yield ui.webOnlyWarmupEngine({runApp: dart.fn(() => {
          $46zapp_entry.runAppGuarded();
        }, T.VoidToNull()), registerPlugins: dart.fn(() => {
          web_plugin_registrant.registerPlugins();
        }, T.VoidToNull())});
    });
  };
  var AppBarTheme_backwardsCompatibility = dart.privateName(app_bar_theme, "AppBarTheme.backwardsCompatibility");
  var SystemUiOverlayStyle_systemStatusBarContrastEnforced = dart.privateName(system_chrome, "SystemUiOverlayStyle.systemStatusBarContrastEnforced");
  var _Enum__name = dart.privateName(core, "_Enum._name");
  var _Enum_index = dart.privateName(core, "_Enum.index");
  var SystemUiOverlayStyle_statusBarIconBrightness = dart.privateName(system_chrome, "SystemUiOverlayStyle.statusBarIconBrightness");
  var SystemUiOverlayStyle_statusBarBrightness = dart.privateName(system_chrome, "SystemUiOverlayStyle.statusBarBrightness");
  var Color_value = dart.privateName(ui, "Color.value");
  var SystemUiOverlayStyle_statusBarColor = dart.privateName(system_chrome, "SystemUiOverlayStyle.statusBarColor");
  var SystemUiOverlayStyle_systemNavigationBarContrastEnforced = dart.privateName(system_chrome, "SystemUiOverlayStyle.systemNavigationBarContrastEnforced");
  var SystemUiOverlayStyle_systemNavigationBarIconBrightness = dart.privateName(system_chrome, "SystemUiOverlayStyle.systemNavigationBarIconBrightness");
  var SystemUiOverlayStyle_systemNavigationBarDividerColor = dart.privateName(system_chrome, "SystemUiOverlayStyle.systemNavigationBarDividerColor");
  var SystemUiOverlayStyle_systemNavigationBarColor = dart.privateName(system_chrome, "SystemUiOverlayStyle.systemNavigationBarColor");
  var AppBarTheme_systemOverlayStyle = dart.privateName(app_bar_theme, "AppBarTheme.systemOverlayStyle");
  var TextStyle_overflow = dart.privateName(text_style, "TextStyle.overflow");
  var TextStyle_fontVariations = dart.privateName(text_style, "TextStyle.fontVariations");
  var TextStyle_fontFeatures = dart.privateName(text_style, "TextStyle.fontFeatures");
  var TextStyle_shadows = dart.privateName(text_style, "TextStyle.shadows");
  var TextStyle_debugLabel = dart.privateName(text_style, "TextStyle.debugLabel");
  var TextStyle_decorationThickness = dart.privateName(text_style, "TextStyle.decorationThickness");
  var TextStyle_decorationStyle = dart.privateName(text_style, "TextStyle.decorationStyle");
  var TextStyle_decorationColor = dart.privateName(text_style, "TextStyle.decorationColor");
  var TextStyle_decoration = dart.privateName(text_style, "TextStyle.decoration");
  var TextStyle_background = dart.privateName(text_style, "TextStyle.background");
  var TextStyle_foreground = dart.privateName(text_style, "TextStyle.foreground");
  var TextStyle_locale = dart.privateName(text_style, "TextStyle.locale");
  var TextStyle_leadingDistribution = dart.privateName(text_style, "TextStyle.leadingDistribution");
  var TextStyle_height = dart.privateName(text_style, "TextStyle.height");
  var TextStyle_textBaseline = dart.privateName(text_style, "TextStyle.textBaseline");
  var TextStyle_wordSpacing = dart.privateName(text_style, "TextStyle.wordSpacing");
  var TextStyle_letterSpacing = dart.privateName(text_style, "TextStyle.letterSpacing");
  var TextStyle_fontStyle = dart.privateName(text_style, "TextStyle.fontStyle");
  var FontWeight_value = dart.privateName(ui, "FontWeight.value");
  var FontWeight_index = dart.privateName(ui, "FontWeight.index");
  var TextStyle_fontWeight = dart.privateName(text_style, "TextStyle.fontWeight");
  var TextStyle_fontSize = dart.privateName(text_style, "TextStyle.fontSize");
  var TextStyle__package = dart.privateName(text_style, "TextStyle._package");
  var TextStyle__fontFamilyFallback = dart.privateName(text_style, "TextStyle._fontFamilyFallback");
  var TextStyle_fontFamily = dart.privateName(text_style, "TextStyle.fontFamily");
  var TextStyle_backgroundColor = dart.privateName(text_style, "TextStyle.backgroundColor");
  var TextStyle_color = dart.privateName(text_style, "TextStyle.color");
  var TextStyle_inherit = dart.privateName(text_style, "TextStyle.inherit");
  var AppBarTheme_titleTextStyle = dart.privateName(app_bar_theme, "AppBarTheme.titleTextStyle");
  var AppBarTheme_toolbarTextStyle = dart.privateName(app_bar_theme, "AppBarTheme.toolbarTextStyle");
  var AppBarTheme_toolbarHeight = dart.privateName(app_bar_theme, "AppBarTheme.toolbarHeight");
  var AppBarTheme_titleSpacing = dart.privateName(app_bar_theme, "AppBarTheme.titleSpacing");
  var AppBarTheme_centerTitle = dart.privateName(app_bar_theme, "AppBarTheme.centerTitle");
  var AppBarTheme_textTheme = dart.privateName(app_bar_theme, "AppBarTheme.textTheme");
  var AppBarTheme_actionsIconTheme = dart.privateName(app_bar_theme, "AppBarTheme.actionsIconTheme");
  var IconThemeData_shadows = dart.privateName(icon_theme_data, "IconThemeData.shadows");
  var IconThemeData__opacity = dart.privateName(icon_theme_data, "IconThemeData._opacity");
  var IconThemeData_color = dart.privateName(icon_theme_data, "IconThemeData.color");
  var IconThemeData_opticalSize = dart.privateName(icon_theme_data, "IconThemeData.opticalSize");
  var IconThemeData_grade = dart.privateName(icon_theme_data, "IconThemeData.grade");
  var IconThemeData_weight = dart.privateName(icon_theme_data, "IconThemeData.weight");
  var IconThemeData_fill = dart.privateName(icon_theme_data, "IconThemeData.fill");
  var IconThemeData_size = dart.privateName(icon_theme_data, "IconThemeData.size");
  var AppBarTheme_iconTheme = dart.privateName(app_bar_theme, "AppBarTheme.iconTheme");
  var AppBarTheme_shape = dart.privateName(app_bar_theme, "AppBarTheme.shape");
  var AppBarTheme_surfaceTintColor = dart.privateName(app_bar_theme, "AppBarTheme.surfaceTintColor");
  var AppBarTheme_shadowColor = dart.privateName(app_bar_theme, "AppBarTheme.shadowColor");
  var AppBarTheme_scrolledUnderElevation = dart.privateName(app_bar_theme, "AppBarTheme.scrolledUnderElevation");
  var AppBarTheme_elevation = dart.privateName(app_bar_theme, "AppBarTheme.elevation");
  var AppBarTheme_foregroundColor = dart.privateName(app_bar_theme, "AppBarTheme.foregroundColor");
  var AppBarTheme_backgroundColor = dart.privateName(app_bar_theme, "AppBarTheme.backgroundColor");
  var AppBarTheme_brightness = dart.privateName(app_bar_theme, "AppBarTheme.brightness");
  var OffsetBase__dy = dart.privateName(ui, "OffsetBase._dy");
  var OffsetBase__dx = dart.privateName(ui, "OffsetBase._dx");
  var BorderSide_strokeAlign = dart.privateName(borders, "BorderSide.strokeAlign");
  var BorderSide_style = dart.privateName(borders, "BorderSide.style");
  var BorderSide_width = dart.privateName(borders, "BorderSide.width");
  var BorderSide_color = dart.privateName(borders, "BorderSide.color");
  var EdgeInsets_bottom = dart.privateName(edge_insets, "EdgeInsets.bottom");
  var EdgeInsets_right = dart.privateName(edge_insets, "EdgeInsets.right");
  var EdgeInsets_top = dart.privateName(edge_insets, "EdgeInsets.top");
  var EdgeInsets_left = dart.privateName(edge_insets, "EdgeInsets.left");
  var Widget_key = dart.privateName(framework, "Widget.key");
  main.TanamiCapitalApp = class TanamiCapitalApp extends framework.StatelessWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new main.TanamiCapitalApp.new({key: key});
    }
    build(context) {
      return new app.MaterialApp.new({title: "Tanami Capital", debugShowCheckedModeBanner: false, theme: theme_data.ThemeData.new({primaryColor: colors$.AppColors.primaryGreen, scaffoldBackgroundColor: colors.Colors.white, fontFamily: "Inter", appBarTheme: C[1] || CT.C1, elevatedButtonTheme: new elevated_button_theme.ElevatedButtonThemeData.new({style: elevated_button.ElevatedButton.styleFrom({backgroundColor: colors$.AppColors.primaryGreen, foregroundColor: colors.Colors.white, minimumSize: C[10] || CT.C10, shape: new rounded_rectangle_border.RoundedRectangleBorder.new({borderRadius: new border_radius.BorderRadius.circular(8)}), textStyle: text_styles.AppTextStyles.buttonText})}), outlinedButtonTheme: new outlined_button_theme.OutlinedButtonThemeData.new({style: outlined_button.OutlinedButton.styleFrom({foregroundColor: colors$.AppColors.primaryGreen, minimumSize: C[10] || CT.C10, side: C[11] || CT.C11, shape: new rounded_rectangle_border.RoundedRectangleBorder.new({borderRadius: new border_radius.BorderRadius.circular(8)}), textStyle: text_styles.AppTextStyles.buttonText})}), inputDecorationTheme: new input_decorator.InputDecorationTheme.new({filled: true, fillColor: colors.Colors.white, contentPadding: C[14] || CT.C14, border: new input_border.OutlineInputBorder.new({borderRadius: new border_radius.BorderRadius.circular(8), borderSide: C[15] || CT.C15}), enabledBorder: new input_border.OutlineInputBorder.new({borderRadius: new border_radius.BorderRadius.circular(8), borderSide: C[15] || CT.C15}), focusedBorder: new input_border.OutlineInputBorder.new({borderRadius: new border_radius.BorderRadius.circular(8), borderSide: C[17] || CT.C17}), errorBorder: new input_border.OutlineInputBorder.new({borderRadius: new border_radius.BorderRadius.circular(8), borderSide: C[18] || CT.C18}), labelStyle: text_styles.AppTextStyles.inputLabel, hintStyle: text_styles.AppTextStyles.inputHint})}), home: C[20] || CT.C20});
    }
  };
  (main.TanamiCapitalApp.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    main.TanamiCapitalApp.__proto__.new.call(this, {key: key});
    ;
  }).prototype = main.TanamiCapitalApp.prototype;
  dart.addTypeTests(main.TanamiCapitalApp);
  dart.addTypeCaches(main.TanamiCapitalApp);
  dart.setMethodSignature(main.TanamiCapitalApp, () => ({
    __proto__: dart.getMethods(main.TanamiCapitalApp.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(main.TanamiCapitalApp, I[0]);
  main.main = function main$0() {
    binding.WidgetsFlutterBinding.ensureInitialized();
    system_chrome.SystemChrome.setPreferredOrientations(T.JSArrayOfDeviceOrientation().of([system_chrome.DeviceOrientation.portraitUp, system_chrome.DeviceOrientation.portraitDown]));
    binding.runApp(C[21] || CT.C21);
  };
  web_plugin_registrant.registerPlugins = function registerPlugins() {
  };
  login_screen.LoginScreen = class LoginScreen extends framework.StatefulWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new login_screen.LoginScreen.new({key: key});
    }
    createState() {
      return new login_screen._LoginScreenState.new();
    }
  };
  (login_screen.LoginScreen.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    login_screen.LoginScreen.__proto__.new.call(this, {key: key});
    ;
  }).prototype = login_screen.LoginScreen.prototype;
  dart.addTypeTests(login_screen.LoginScreen);
  dart.addTypeCaches(login_screen.LoginScreen);
  dart.setMethodSignature(login_screen.LoginScreen, () => ({
    __proto__: dart.getMethods(login_screen.LoginScreen.__proto__),
    createState: dart.fnType(framework.State$(login_screen.LoginScreen), [])
  }));
  dart.setLibraryUri(login_screen.LoginScreen, I[1]);
  var _formKey = dart.privateName(login_screen, "_formKey");
  var _emailController = dart.privateName(login_screen, "_emailController");
  var _passwordController = dart.privateName(login_screen, "_passwordController");
  var _obscurePassword = dart.privateName(login_screen, "_obscurePassword");
  var _togglePasswordVisibility = dart.privateName(login_screen, "_togglePasswordVisibility");
  var SnackBar_clipBehavior = dart.privateName(snack_bar, "SnackBar.clipBehavior");
  var SnackBar_dismissDirection = dart.privateName(snack_bar, "SnackBar.dismissDirection");
  var SnackBar_onVisible = dart.privateName(snack_bar, "SnackBar.onVisible");
  var SnackBar_animation = dart.privateName(snack_bar, "SnackBar.animation");
  var Duration__duration = dart.privateName(core, "Duration._duration");
  var SnackBar_duration = dart.privateName(snack_bar, "SnackBar.duration");
  var SnackBar_closeIconColor = dart.privateName(snack_bar, "SnackBar.closeIconColor");
  var SnackBar_showCloseIcon = dart.privateName(snack_bar, "SnackBar.showCloseIcon");
  var SnackBar_action = dart.privateName(snack_bar, "SnackBar.action");
  var SnackBar_behavior = dart.privateName(snack_bar, "SnackBar.behavior");
  var SnackBar_shape = dart.privateName(snack_bar, "SnackBar.shape");
  var SnackBar_width = dart.privateName(snack_bar, "SnackBar.width");
  var SnackBar_padding = dart.privateName(snack_bar, "SnackBar.padding");
  var SnackBar_margin = dart.privateName(snack_bar, "SnackBar.margin");
  var SnackBar_elevation = dart.privateName(snack_bar, "SnackBar.elevation");
  var SnackBar_backgroundColor = dart.privateName(snack_bar, "SnackBar.backgroundColor");
  var Text_selectionColor = dart.privateName(text, "Text.selectionColor");
  var Text_textHeightBehavior = dart.privateName(text, "Text.textHeightBehavior");
  var Text_textWidthBasis = dart.privateName(text, "Text.textWidthBasis");
  var Text_semanticsLabel = dart.privateName(text, "Text.semanticsLabel");
  var Text_maxLines = dart.privateName(text, "Text.maxLines");
  var Text_textScaleFactor = dart.privateName(text, "Text.textScaleFactor");
  var Text_overflow = dart.privateName(text, "Text.overflow");
  var Text_softWrap = dart.privateName(text, "Text.softWrap");
  var Text_locale = dart.privateName(text, "Text.locale");
  var Text_textDirection = dart.privateName(text, "Text.textDirection");
  var Text_textAlign = dart.privateName(text, "Text.textAlign");
  var Text_strutStyle = dart.privateName(text, "Text.strutStyle");
  var Text_style = dart.privateName(text, "Text.style");
  var Text_textSpan = dart.privateName(text, "Text.textSpan");
  var Text_data = dart.privateName(text, "Text.data");
  var SnackBar_content = dart.privateName(snack_bar, "SnackBar.content");
  var _handleLogin = dart.privateName(login_screen, "_handleLogin");
  var _navigateToRegistration = dart.privateName(login_screen, "_navigateToRegistration");
  var SingleChildRenderObjectWidget_child = dart.privateName(framework, "SingleChildRenderObjectWidget.child");
  var SizedBox_height = dart.privateName(basic, "SizedBox.height");
  var SizedBox_width = dart.privateName(basic, "SizedBox.width");
  var TanamiLogo_height = dart.privateName(tanami_logo, "TanamiLogo.height");
  login_screen._LoginScreenState = class _LoginScreenState extends framework.State$(login_screen.LoginScreen) {
    dispose() {
      this[_emailController].dispose();
      this[_passwordController].dispose();
      super.dispose();
    }
    [_togglePasswordVisibility]() {
      this.setState(dart.fn(() => {
        this[_obscurePassword] = !this[_obscurePassword];
      }, T.VoidTovoid()));
    }
    [_handleLogin]() {
      if (dart.nullCheck(this[_formKey].currentState).validate()) {
        navigator.Navigator.push(dart.dynamic, this.context, new page.MaterialPageRoute.new({builder: dart.fn(context => C[22] || CT.C22, T.BuildContextToDashboardScreen())}));
        scaffold.ScaffoldMessenger.of(this.context).showSnackBar(C[23] || CT.C23);
      }
    }
    [_navigateToRegistration]() {
      navigator.Navigator.push(dart.dynamic, this.context, new page.MaterialPageRoute.new({builder: dart.fn(context => C[28] || CT.C28, T.BuildContextToRegistrationScreen())}));
    }
    build(context) {
      return new scaffold.Scaffold.new({body: new (T.AnnotatedRegionOfSystemUiOverlayStyle()).new({value: C[2] || CT.C2, child: new safe_area.SafeArea.new({child: new basic.Padding.new({padding: C[29] || CT.C29, child: new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.center, children: T.JSArrayOfWidget().of([C[30] || CT.C30, C[31] || CT.C31, C[32] || CT.C32, new basic.Expanded.new({child: new single_child_scroll_view.SingleChildScrollView.new({child: new form.Form.new({key: this[_formKey], child: new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.start, children: T.JSArrayOfWidget().of([C[33] || CT.C33, new custom_text_field.CustomTextField.new({controller: this[_emailController], label: "Email", hintText: "Enter your email address", keyboardType: text_input.TextInputType.emailAddress, validator: dart.fn(value => {
                                if (value == null || value[$isEmpty]) {
                                  return "Please enter your email";
                                }
                                if (!core.RegExp.new("^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$").hasMatch(value)) {
                                  return "Please enter a valid email address";
                                }
                                return null;
                              }, T.StringNToStringN())}), C[34] || CT.C34, new custom_text_field.CustomTextField.new({controller: this[_passwordController], label: "Password", hintText: "Enter your password", obscureText: this[_obscurePassword], suffixIcon: new icon_button.IconButton.new({icon: new icon.Icon.new(this[_obscurePassword] ? icons.Icons.visibility_off : icons.Icons.visibility, {color: colors$.AppColors.mediumText}), onPressed: dart.bind(this, _togglePasswordVisibility)}), validator: dart.fn(value => {
                                if (value == null || value[$isEmpty]) {
                                  return "Please enter your password";
                                }
                                return null;
                              }, T.StringNToStringN())}), C[35] || CT.C35, new basic.Align.new({alignment: alignment.Alignment.centerRight, child: new text_button.TextButton.new({onPressed: dart.fn(() => {
                                }, T.VoidTovoid()), child: C[36] || CT.C36})}), C[33] || CT.C33])})})})}), new custom_button.CustomButton.new({label: "Log in", onPressed: dart.bind(this, _handleLogin), type: custom_button.ButtonType.filled}), C[34] || CT.C34, new custom_button.CustomButton.new({label: "Sign up", onPressed: dart.bind(this, _navigateToRegistration), type: custom_button.ButtonType.outlined}), C[39] || CT.C39])})})})})});
    }
    static ['_#new#tearOff']() {
      return new login_screen._LoginScreenState.new();
    }
  };
  (login_screen._LoginScreenState.new = function() {
    this[_formKey] = T.GlobalKeyOfFormState().new();
    this[_emailController] = new editable_text.TextEditingController.new();
    this[_passwordController] = new editable_text.TextEditingController.new();
    this[_obscurePassword] = true;
    login_screen._LoginScreenState.__proto__.new.call(this);
    ;
  }).prototype = login_screen._LoginScreenState.prototype;
  dart.addTypeTests(login_screen._LoginScreenState);
  dart.addTypeCaches(login_screen._LoginScreenState);
  dart.setMethodSignature(login_screen._LoginScreenState, () => ({
    __proto__: dart.getMethods(login_screen._LoginScreenState.__proto__),
    [_togglePasswordVisibility]: dart.fnType(dart.void, []),
    [_handleLogin]: dart.fnType(dart.void, []),
    [_navigateToRegistration]: dart.fnType(dart.void, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(login_screen._LoginScreenState, I[1]);
  dart.setFieldSignature(login_screen._LoginScreenState, () => ({
    __proto__: dart.getFields(login_screen._LoginScreenState.__proto__),
    [_formKey]: dart.finalFieldType(framework.GlobalKey$(form.FormState)),
    [_emailController]: dart.finalFieldType(editable_text.TextEditingController),
    [_passwordController]: dart.finalFieldType(editable_text.TextEditingController),
    [_obscurePassword]: dart.fieldType(core.bool)
  }));
  colors$.AppColors = class AppColors extends core.Object {
    static ['_#new#tearOff']() {
      return new colors$.AppColors.new();
    }
  };
  (colors$.AppColors.new = function() {
    ;
  }).prototype = colors$.AppColors.prototype;
  dart.addTypeTests(colors$.AppColors);
  dart.addTypeCaches(colors$.AppColors);
  dart.setLibraryUri(colors$.AppColors, I[2]);
  dart.setStaticFieldSignature(colors$.AppColors, () => ['primaryGreen', 'secondaryGreen', 'lightGreen', 'darkText', 'mediumText', 'lightText', 'lightGrey', 'dividerColor', 'errorRed', 'successGreen', 'backgroundWhite', 'backgroundLightGrey']);
  dart.defineLazy(colors$.AppColors, {
    /*colors$.AppColors.primaryGreen*/get primaryGreen() {
      return C[13] || CT.C13;
    },
    /*colors$.AppColors.secondaryGreen*/get secondaryGreen() {
      return C[40] || CT.C40;
    },
    /*colors$.AppColors.lightGreen*/get lightGreen() {
      return C[41] || CT.C41;
    },
    /*colors$.AppColors.darkText*/get darkText() {
      return C[7] || CT.C7;
    },
    /*colors$.AppColors.mediumText*/get mediumText() {
      return C[42] || CT.C42;
    },
    /*colors$.AppColors.lightText*/get lightText() {
      return C[43] || CT.C43;
    },
    /*colors$.AppColors.lightGrey*/get lightGrey() {
      return C[16] || CT.C16;
    },
    /*colors$.AppColors.dividerColor*/get dividerColor() {
      return C[44] || CT.C44;
    },
    /*colors$.AppColors.errorRed*/get errorRed() {
      return C[19] || CT.C19;
    },
    /*colors$.AppColors.successGreen*/get successGreen() {
      return C[45] || CT.C45;
    },
    /*colors$.AppColors.backgroundWhite*/get backgroundWhite() {
      return C[9] || CT.C9;
    },
    /*colors$.AppColors.backgroundLightGrey*/get backgroundLightGrey() {
      return C[46] || CT.C46;
    }
  }, false);
  text_styles.AppTextStyles = class AppTextStyles extends core.Object {
    static ['_#new#tearOff']() {
      return new text_styles.AppTextStyles.new();
    }
  };
  (text_styles.AppTextStyles.new = function() {
    ;
  }).prototype = text_styles.AppTextStyles.prototype;
  dart.addTypeTests(text_styles.AppTextStyles);
  dart.addTypeCaches(text_styles.AppTextStyles);
  dart.setLibraryUri(text_styles.AppTextStyles, I[3]);
  dart.setStaticFieldSignature(text_styles.AppTextStyles, () => ['heading', 'subheading', 'bodyLarge', 'bodyMedium', 'bodySmall', 'inputLabel', 'inputHint', 'inputText', 'buttonText', 'tagline', 'stepHeading', 'stepDescription']);
  dart.defineLazy(text_styles.AppTextStyles, {
    /*text_styles.AppTextStyles.heading*/get heading() {
      return C[5] || CT.C5;
    },
    /*text_styles.AppTextStyles.subheading*/get subheading() {
      return C[47] || CT.C47;
    },
    /*text_styles.AppTextStyles.bodyLarge*/get bodyLarge() {
      return C[48] || CT.C48;
    },
    /*text_styles.AppTextStyles.bodyMedium*/get bodyMedium() {
      return C[50] || CT.C50;
    },
    /*text_styles.AppTextStyles.bodySmall*/get bodySmall() {
      return C[51] || CT.C51;
    },
    /*text_styles.AppTextStyles.inputLabel*/get inputLabel() {
      return C[52] || CT.C52;
    },
    /*text_styles.AppTextStyles.inputHint*/get inputHint() {
      return C[53] || CT.C53;
    },
    /*text_styles.AppTextStyles.inputText*/get inputText() {
      return C[54] || CT.C54;
    },
    /*text_styles.AppTextStyles.buttonText*/get buttonText() {
      return C[55] || CT.C55;
    },
    /*text_styles.AppTextStyles.tagline*/get tagline() {
      return C[56] || CT.C56;
    },
    /*text_styles.AppTextStyles.stepHeading*/get stepHeading() {
      return C[58] || CT.C58;
    },
    /*text_styles.AppTextStyles.stepDescription*/get stepDescription() {
      return C[59] || CT.C59;
    }
  }, false);
  var _name = dart.privateName(core, "_name");
  var _enumToString = dart.privateName(core, "_enumToString");
  custom_button.ButtonType = class ButtonType extends core._Enum {
    [_enumToString]() {
      return "ButtonType." + this[_name];
    }
  };
  (custom_button.ButtonType.new = function(index, name) {
    custom_button.ButtonType.__proto__.new.call(this, index, name);
    ;
  }).prototype = custom_button.ButtonType.prototype;
  dart.addTypeTests(custom_button.ButtonType);
  dart.addTypeCaches(custom_button.ButtonType);
  dart.setMethodSignature(custom_button.ButtonType, () => ({
    __proto__: dart.getMethods(custom_button.ButtonType.__proto__),
    [_enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(custom_button.ButtonType, I[4]);
  dart.setStaticFieldSignature(custom_button.ButtonType, () => ['values', 'filled', 'outlined']);
  dart.defineLazy(custom_button.ButtonType, {
    /*custom_button.ButtonType.values*/get values() {
      return C[60] || CT.C60;
    },
    /*custom_button.ButtonType.filled*/get filled() {
      return C[61] || CT.C61;
    },
    /*custom_button.ButtonType.outlined*/get outlined() {
      return C[62] || CT.C62;
    }
  }, false);
  var label$ = dart.privateName(custom_button, "CustomButton.label");
  var onPressed$ = dart.privateName(custom_button, "CustomButton.onPressed");
  var type$ = dart.privateName(custom_button, "CustomButton.type");
  var isLoading$ = dart.privateName(custom_button, "CustomButton.isLoading");
  var width$ = dart.privateName(custom_button, "CustomButton.width");
  var ProgressIndicator_semanticsValue = dart.privateName(progress_indicator, "ProgressIndicator.semanticsValue");
  var ProgressIndicator_semanticsLabel = dart.privateName(progress_indicator, "ProgressIndicator.semanticsLabel");
  var ProgressIndicator_valueColor = dart.privateName(progress_indicator, "ProgressIndicator.valueColor");
  var ProgressIndicator_color = dart.privateName(progress_indicator, "ProgressIndicator.color");
  var ProgressIndicator_backgroundColor = dart.privateName(progress_indicator, "ProgressIndicator.backgroundColor");
  var ProgressIndicator_value = dart.privateName(progress_indicator, "ProgressIndicator.value");
  var CircularProgressIndicator_strokeWidth = dart.privateName(progress_indicator, "CircularProgressIndicator.strokeWidth");
  var CircularProgressIndicator__indicatorType = dart.privateName(progress_indicator, "CircularProgressIndicator._indicatorType");
  custom_button.CustomButton = class CustomButton extends framework.StatelessWidget {
    get label() {
      return this[label$];
    }
    set label(value) {
      super.label = value;
    }
    get onPressed() {
      return this[onPressed$];
    }
    set onPressed(value) {
      super.onPressed = value;
    }
    get type() {
      return this[type$];
    }
    set type(value) {
      super.type = value;
    }
    get isLoading() {
      return this[isLoading$];
    }
    set isLoading(value) {
      super.isLoading = value;
    }
    get width() {
      return this[width$];
    }
    set width(value) {
      super.width = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let label = opts && 'label' in opts ? opts.label : null;
      let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
      let type = opts && 'type' in opts ? opts.type : C[61] || CT.C61;
      let isLoading = opts && 'isLoading' in opts ? opts.isLoading : false;
      let width = opts && 'width' in opts ? opts.width : null;
      return new custom_button.CustomButton.new({key: key, label: label, onPressed: onPressed, type: type, isLoading: isLoading, width: width});
    }
    build(context) {
      let t2;
      return new basic.SizedBox.new({width: (t2 = this.width, t2 == null ? 1 / 0 : t2), height: 56, child: this.type === custom_button.ButtonType.filled ? new elevated_button.ElevatedButton.new({onPressed: this.isLoading ? null : this.onPressed, style: elevated_button.ElevatedButton.styleFrom({backgroundColor: colors$.AppColors.primaryGreen, foregroundColor: colors.Colors.white, shape: new rounded_rectangle_border.RoundedRectangleBorder.new({borderRadius: new border_radius.BorderRadius.circular(8)}), elevation: 0}), child: this.isLoading ? C[63] || CT.C63 : new text.Text.new(this.label, {style: text_styles.AppTextStyles.buttonText.copyWith({color: colors.Colors.white})})}) : new outlined_button.OutlinedButton.new({onPressed: this.isLoading ? null : this.onPressed, style: outlined_button.OutlinedButton.styleFrom({foregroundColor: colors$.AppColors.primaryGreen, side: C[11] || CT.C11, shape: new rounded_rectangle_border.RoundedRectangleBorder.new({borderRadius: new border_radius.BorderRadius.circular(8)})}), child: this.isLoading ? C[66] || CT.C66 : new text.Text.new(this.label, {style: text_styles.AppTextStyles.buttonText.copyWith({color: colors$.AppColors.primaryGreen})})})});
    }
  };
  (custom_button.CustomButton.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let label = opts && 'label' in opts ? opts.label : null;
    let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
    let type = opts && 'type' in opts ? opts.type : C[61] || CT.C61;
    let isLoading = opts && 'isLoading' in opts ? opts.isLoading : false;
    let width = opts && 'width' in opts ? opts.width : null;
    this[label$] = label;
    this[onPressed$] = onPressed;
    this[type$] = type;
    this[isLoading$] = isLoading;
    this[width$] = width;
    custom_button.CustomButton.__proto__.new.call(this, {key: key});
    ;
  }).prototype = custom_button.CustomButton.prototype;
  dart.addTypeTests(custom_button.CustomButton);
  dart.addTypeCaches(custom_button.CustomButton);
  dart.setMethodSignature(custom_button.CustomButton, () => ({
    __proto__: dart.getMethods(custom_button.CustomButton.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(custom_button.CustomButton, I[4]);
  dart.setFieldSignature(custom_button.CustomButton, () => ({
    __proto__: dart.getFields(custom_button.CustomButton.__proto__),
    label: dart.finalFieldType(core.String),
    onPressed: dart.finalFieldType(dart.fnType(dart.void, [])),
    type: dart.finalFieldType(custom_button.ButtonType),
    isLoading: dart.finalFieldType(core.bool),
    width: dart.finalFieldType(dart.nullable(core.double))
  }));
  var controller$ = dart.privateName(custom_text_field, "CustomTextField.controller");
  var label$0 = dart.privateName(custom_text_field, "CustomTextField.label");
  var hintText$ = dart.privateName(custom_text_field, "CustomTextField.hintText");
  var obscureText$ = dart.privateName(custom_text_field, "CustomTextField.obscureText");
  var keyboardType$ = dart.privateName(custom_text_field, "CustomTextField.keyboardType");
  var suffixIcon$ = dart.privateName(custom_text_field, "CustomTextField.suffixIcon");
  var validator$ = dart.privateName(custom_text_field, "CustomTextField.validator");
  var inputFormatters$ = dart.privateName(custom_text_field, "CustomTextField.inputFormatters");
  var maxLength$ = dart.privateName(custom_text_field, "CustomTextField.maxLength");
  var readOnly$ = dart.privateName(custom_text_field, "CustomTextField.readOnly");
  var onTap$ = dart.privateName(custom_text_field, "CustomTextField.onTap");
  var TextInputType_decimal = dart.privateName(text_input, "TextInputType.decimal");
  var TextInputType_signed = dart.privateName(text_input, "TextInputType.signed");
  var TextInputType_index = dart.privateName(text_input, "TextInputType.index");
  custom_text_field.CustomTextField = class CustomTextField extends framework.StatelessWidget {
    get controller() {
      return this[controller$];
    }
    set controller(value) {
      super.controller = value;
    }
    get label() {
      return this[label$0];
    }
    set label(value) {
      super.label = value;
    }
    get hintText() {
      return this[hintText$];
    }
    set hintText(value) {
      super.hintText = value;
    }
    get obscureText() {
      return this[obscureText$];
    }
    set obscureText(value) {
      super.obscureText = value;
    }
    get keyboardType() {
      return this[keyboardType$];
    }
    set keyboardType(value) {
      super.keyboardType = value;
    }
    get suffixIcon() {
      return this[suffixIcon$];
    }
    set suffixIcon(value) {
      super.suffixIcon = value;
    }
    get validator() {
      return this[validator$];
    }
    set validator(value) {
      super.validator = value;
    }
    get inputFormatters() {
      return this[inputFormatters$];
    }
    set inputFormatters(value) {
      super.inputFormatters = value;
    }
    get maxLength() {
      return this[maxLength$];
    }
    set maxLength(value) {
      super.maxLength = value;
    }
    get readOnly() {
      return this[readOnly$];
    }
    set readOnly(value) {
      super.readOnly = value;
    }
    get onTap() {
      return this[onTap$];
    }
    set onTap(value) {
      super.onTap = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let controller = opts && 'controller' in opts ? opts.controller : null;
      let label = opts && 'label' in opts ? opts.label : null;
      let hintText = opts && 'hintText' in opts ? opts.hintText : null;
      let obscureText = opts && 'obscureText' in opts ? opts.obscureText : false;
      let keyboardType = opts && 'keyboardType' in opts ? opts.keyboardType : C[68] || CT.C68;
      let suffixIcon = opts && 'suffixIcon' in opts ? opts.suffixIcon : null;
      let validator = opts && 'validator' in opts ? opts.validator : null;
      let inputFormatters = opts && 'inputFormatters' in opts ? opts.inputFormatters : null;
      let maxLength = opts && 'maxLength' in opts ? opts.maxLength : null;
      let readOnly = opts && 'readOnly' in opts ? opts.readOnly : false;
      let onTap = opts && 'onTap' in opts ? opts.onTap : null;
      return new custom_text_field.CustomTextField.new({key: key, controller: controller, label: label, hintText: hintText, obscureText: obscureText, keyboardType: keyboardType, suffixIcon: suffixIcon, validator: validator, inputFormatters: inputFormatters, maxLength: maxLength, readOnly: readOnly, onTap: onTap});
    }
    build(context) {
      return new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.start, children: T.JSArrayOfWidget().of([new text.Text.new(this.label, {style: text_styles.AppTextStyles.inputLabel}), C[69] || CT.C69, new text_form_field.TextFormField.new({controller: this.controller, obscureText: this.obscureText, keyboardType: this.keyboardType, validator: this.validator, inputFormatters: this.inputFormatters, maxLength: this.maxLength, readOnly: this.readOnly, onTap: this.onTap, style: text_styles.AppTextStyles.inputText, cursorColor: colors$.AppColors.primaryGreen, decoration: new input_decorator.InputDecoration.new({hintText: this.hintText, hintStyle: text_styles.AppTextStyles.inputHint, suffixIcon: this.suffixIcon, contentPadding: C[70] || CT.C70, counterText: "", errorStyle: C[71] || CT.C71})})])});
    }
  };
  (custom_text_field.CustomTextField.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let label = opts && 'label' in opts ? opts.label : null;
    let hintText = opts && 'hintText' in opts ? opts.hintText : null;
    let obscureText = opts && 'obscureText' in opts ? opts.obscureText : false;
    let keyboardType = opts && 'keyboardType' in opts ? opts.keyboardType : C[68] || CT.C68;
    let suffixIcon = opts && 'suffixIcon' in opts ? opts.suffixIcon : null;
    let validator = opts && 'validator' in opts ? opts.validator : null;
    let inputFormatters = opts && 'inputFormatters' in opts ? opts.inputFormatters : null;
    let maxLength = opts && 'maxLength' in opts ? opts.maxLength : null;
    let readOnly = opts && 'readOnly' in opts ? opts.readOnly : false;
    let onTap = opts && 'onTap' in opts ? opts.onTap : null;
    this[controller$] = controller;
    this[label$0] = label;
    this[hintText$] = hintText;
    this[obscureText$] = obscureText;
    this[keyboardType$] = keyboardType;
    this[suffixIcon$] = suffixIcon;
    this[validator$] = validator;
    this[inputFormatters$] = inputFormatters;
    this[maxLength$] = maxLength;
    this[readOnly$] = readOnly;
    this[onTap$] = onTap;
    custom_text_field.CustomTextField.__proto__.new.call(this, {key: key});
    ;
  }).prototype = custom_text_field.CustomTextField.prototype;
  dart.addTypeTests(custom_text_field.CustomTextField);
  dart.addTypeCaches(custom_text_field.CustomTextField);
  dart.setMethodSignature(custom_text_field.CustomTextField, () => ({
    __proto__: dart.getMethods(custom_text_field.CustomTextField.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(custom_text_field.CustomTextField, I[5]);
  dart.setFieldSignature(custom_text_field.CustomTextField, () => ({
    __proto__: dart.getFields(custom_text_field.CustomTextField.__proto__),
    controller: dart.finalFieldType(editable_text.TextEditingController),
    label: dart.finalFieldType(core.String),
    hintText: dart.finalFieldType(dart.nullable(core.String)),
    obscureText: dart.finalFieldType(core.bool),
    keyboardType: dart.finalFieldType(text_input.TextInputType),
    suffixIcon: dart.finalFieldType(dart.nullable(framework.Widget)),
    validator: dart.finalFieldType(dart.nullable(dart.fnType(dart.nullable(core.String), [dart.nullable(core.String)]))),
    inputFormatters: dart.finalFieldType(dart.nullable(core.List$(text_formatter.TextInputFormatter))),
    maxLength: dart.finalFieldType(dart.nullable(core.int)),
    readOnly: dart.finalFieldType(core.bool),
    onTap: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [])))
  }));
  const height$ = TanamiLogo_height;
  tanami_logo.TanamiLogo = class TanamiLogo extends framework.StatelessWidget {
    get height() {
      return this[height$];
    }
    set height(value) {
      super.height = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let height = opts && 'height' in opts ? opts.height : 40;
      return new tanami_logo.TanamiLogo.new({key: key, height: height});
    }
    build(context) {
      return new basic.Row.new({mainAxisSize: flex.MainAxisSize.min, children: T.JSArrayOfWidget().of([C[72] || CT.C72, new basic.Column.new({mainAxisSize: flex.MainAxisSize.min, crossAxisAlignment: flex.CrossAxisAlignment.start, children: T.JSArrayOfWidget().of([new text.Text.new("Tanami", {style: new text_style.TextStyle.new({color: colors$.AppColors.primaryGreen, fontSize: this.height * 0.5, fontWeight: ui.FontWeight.w600, letterSpacing: -0.5})}), new text.Text.new("CAPITAL", {style: new text_style.TextStyle.new({color: colors$.AppColors.primaryGreen, fontSize: this.height * 0.25, fontWeight: ui.FontWeight.w500, letterSpacing: 1.2})})])})])});
    }
  };
  (tanami_logo.TanamiLogo.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let height = opts && 'height' in opts ? opts.height : 40;
    this[height$] = height;
    tanami_logo.TanamiLogo.__proto__.new.call(this, {key: key});
    ;
  }).prototype = tanami_logo.TanamiLogo.prototype;
  dart.addTypeTests(tanami_logo.TanamiLogo);
  dart.addTypeCaches(tanami_logo.TanamiLogo);
  dart.setMethodSignature(tanami_logo.TanamiLogo, () => ({
    __proto__: dart.getMethods(tanami_logo.TanamiLogo.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(tanami_logo.TanamiLogo, I[6]);
  dart.setFieldSignature(tanami_logo.TanamiLogo, () => ({
    __proto__: dart.getFields(tanami_logo.TanamiLogo.__proto__),
    height: dart.finalFieldType(core.double)
  }));
  registration_screen.RegistrationScreen = class RegistrationScreen extends framework.StatefulWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new registration_screen.RegistrationScreen.new({key: key});
    }
    createState() {
      return new registration_screen._RegistrationScreenState.new();
    }
  };
  (registration_screen.RegistrationScreen.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    registration_screen.RegistrationScreen.__proto__.new.call(this, {key: key});
    ;
  }).prototype = registration_screen.RegistrationScreen.prototype;
  dart.addTypeTests(registration_screen.RegistrationScreen);
  dart.addTypeCaches(registration_screen.RegistrationScreen);
  dart.setMethodSignature(registration_screen.RegistrationScreen, () => ({
    __proto__: dart.getMethods(registration_screen.RegistrationScreen.__proto__),
    createState: dart.fnType(framework.State$(registration_screen.RegistrationScreen), [])
  }));
  dart.setLibraryUri(registration_screen.RegistrationScreen, I[7]);
  var _formKeys = dart.privateName(registration_screen, "_formKeys");
  var _currentStep = dart.privateName(registration_screen, "_currentStep");
  var _countryController = dart.privateName(registration_screen, "_countryController");
  var _mobileController = dart.privateName(registration_screen, "_mobileController");
  var _nameController = dart.privateName(registration_screen, "_nameController");
  var _emailController$ = dart.privateName(registration_screen, "_emailController");
  var _passwordController$ = dart.privateName(registration_screen, "_passwordController");
  var _confirmPasswordController = dart.privateName(registration_screen, "_confirmPasswordController");
  var _pinController = dart.privateName(registration_screen, "_pinController");
  var _obscurePassword$ = dart.privateName(registration_screen, "_obscurePassword");
  var _obscureConfirmPassword = dart.privateName(registration_screen, "_obscureConfirmPassword");
  var _obscurePin = dart.privateName(registration_screen, "_obscurePin");
  var _togglePasswordVisibility$ = dart.privateName(registration_screen, "_togglePasswordVisibility");
  var _toggleConfirmPasswordVisibility = dart.privateName(registration_screen, "_toggleConfirmPasswordVisibility");
  var _togglePinVisibility = dart.privateName(registration_screen, "_togglePinVisibility");
  var _nextStep = dart.privateName(registration_screen, "_nextStep");
  var _previousStep = dart.privateName(registration_screen, "_previousStep");
  var Icon_textDirection = dart.privateName(icon, "Icon.textDirection");
  var Icon_semanticLabel = dart.privateName(icon, "Icon.semanticLabel");
  var Icon_shadows = dart.privateName(icon, "Icon.shadows");
  var Icon_color = dart.privateName(icon, "Icon.color");
  var Icon_opticalSize = dart.privateName(icon, "Icon.opticalSize");
  var Icon_grade = dart.privateName(icon, "Icon.grade");
  var Icon_weight = dart.privateName(icon, "Icon.weight");
  var Icon_fill = dart.privateName(icon, "Icon.fill");
  var Icon_size = dart.privateName(icon, "Icon.size");
  var IconData_matchTextDirection = dart.privateName(icon_data, "IconData.matchTextDirection");
  var IconData_fontPackage = dart.privateName(icon_data, "IconData.fontPackage");
  var IconData_fontFamily = dart.privateName(icon_data, "IconData.fontFamily");
  var IconData_codePoint = dart.privateName(icon_data, "IconData.codePoint");
  var Icon_icon = dart.privateName(icon, "Icon.icon");
  var Align_heightFactor = dart.privateName(basic, "Align.heightFactor");
  var Align_widthFactor = dart.privateName(basic, "Align.widthFactor");
  var Alignment_y = dart.privateName(alignment, "Alignment.y");
  var Alignment_x = dart.privateName(alignment, "Alignment.x");
  var Align_alignment = dart.privateName(basic, "Align.alignment");
  var ProxyWidget_child = dart.privateName(framework, "ProxyWidget.child");
  var Flexible_fit = dart.privateName(basic, "Flexible.fit");
  var Flexible_flex = dart.privateName(basic, "Flexible.flex");
  var _buildCurrentStepForm = dart.privateName(registration_screen, "_buildCurrentStepForm");
  var _buildStep1Form = dart.privateName(registration_screen, "_buildStep1Form");
  var _buildStep2Form = dart.privateName(registration_screen, "_buildStep2Form");
  var _buildStep3Form = dart.privateName(registration_screen, "_buildStep3Form");
  registration_screen._RegistrationScreenState = class _RegistrationScreenState extends framework.State$(registration_screen.RegistrationScreen) {
    dispose() {
      this[_countryController].dispose();
      this[_mobileController].dispose();
      this[_nameController].dispose();
      this[_emailController$].dispose();
      this[_passwordController$].dispose();
      this[_confirmPasswordController].dispose();
      this[_pinController].dispose();
      super.dispose();
    }
    [_togglePasswordVisibility$]() {
      this.setState(dart.fn(() => {
        this[_obscurePassword$] = !this[_obscurePassword$];
      }, T.VoidTovoid()));
    }
    [_toggleConfirmPasswordVisibility]() {
      this.setState(dart.fn(() => {
        this[_obscureConfirmPassword] = !this[_obscureConfirmPassword];
      }, T.VoidTovoid()));
    }
    [_togglePinVisibility]() {
      this.setState(dart.fn(() => {
        this[_obscurePin] = !this[_obscurePin];
      }, T.VoidTovoid()));
    }
    [_nextStep]() {
      if (dart.nullCheck(this[_formKeys][$_get](this[_currentStep]).currentState).validate()) {
        if (this[_currentStep] < 2) {
          this.setState(dart.fn(() => {
            this[_currentStep] = this[_currentStep] + 1;
          }, T.VoidTovoid()));
        } else {
          scaffold.ScaffoldMessenger.of(this.context).showSnackBar(C[73] || CT.C73);
          navigator.Navigator.pop(T.ObjectN(), this.context);
        }
      }
    }
    [_previousStep]() {
      if (this[_currentStep] > 0) {
        this.setState(dart.fn(() => {
          this[_currentStep] = this[_currentStep] - 1;
        }, T.VoidTovoid()));
      } else {
        navigator.Navigator.pop(T.ObjectN(), this.context);
      }
    }
    build(context) {
      return new scaffold.Scaffold.new({body: new (T.AnnotatedRegionOfSystemUiOverlayStyle()).new({value: C[2] || CT.C2, child: new safe_area.SafeArea.new({child: new basic.Column.new({children: T.JSArrayOfWidget().of([new basic.Padding.new({padding: C[14] || CT.C14, child: new basic.Row.new({children: T.JSArrayOfWidget().of([new icon_button.IconButton.new({icon: C[75] || CT.C75, onPressed: dart.bind(this, _previousStep)}), C[77] || CT.C77, C[82] || CT.C82])})}), new basic.Expanded.new({child: new basic.Padding.new({padding: C[29] || CT.C29, child: new basic.Column.new({children: T.JSArrayOfWidget().of([new container.Container.new({width: 1 / 0, padding: C[83] || CT.C83, decoration: new box_decoration.BoxDecoration.new({color: colors$.AppColors.primaryGreen, borderRadius: new border_radius.BorderRadius.circular(12)}), child: new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.start, children: T.JSArrayOfWidget().of([new step_indicator.StepIndicator.new({currentStep: this[_currentStep], stepNumber: 1, title: "Step 1", description: "Enter your country of residence and mobile number"}), C[34] || CT.C34, new step_indicator.StepIndicator.new({currentStep: this[_currentStep], stepNumber: 2, title: "Step 2", description: "Enter your name and email"}), C[34] || CT.C34, new step_indicator.StepIndicator.new({currentStep: this[_currentStep], stepNumber: 3, title: "Step 3", description: "Set a password and unique pin code"})])})}), new basic.Expanded.new({child: new single_child_scroll_view.SingleChildScrollView.new({child: new basic.Padding.new({padding: C[84] || CT.C84, child: this[_buildCurrentStepForm]()})})}), new basic.Padding.new({padding: new edge_insets.EdgeInsets.symmetric({vertical: 16}), child: new basic.RichText.new({textAlign: ui.TextAlign.center, text: new text_span.TextSpan.new({style: text_styles.AppTextStyles.tagline, children: T.JSArrayOfInlineSpan().of([new text_span.TextSpan.new({text: "Start Investing in "}), new text_span.TextSpan.new({text: "Under 10 minutes", style: new text_style.TextStyle.new({fontStyle: ui.FontStyle.italic, fontWeight: ui.FontWeight.w600})})])})})}), new custom_button.CustomButton.new({label: this[_currentStep] < 2 ? "Next" : "Sign up", onPressed: dart.bind(this, _nextStep), type: custom_button.ButtonType.filled}), C[33] || CT.C33])})})})])})})})});
    }
    [_buildCurrentStepForm]() {
      switch (this[_currentStep]) {
        case 0:
          {
            return this[_buildStep1Form]();
          }
        case 1:
          {
            return this[_buildStep2Form]();
          }
        case 2:
          {
            return this[_buildStep3Form]();
          }
        default:
          {
            return C[85] || CT.C85;
          }
      }
    }
    [_buildStep1Form]() {
      return new form.Form.new({key: this[_formKeys][$_get](0), child: new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.start, children: T.JSArrayOfWidget().of([new custom_text_field.CustomTextField.new({controller: this[_countryController], label: "Country of Residence", hintText: "Select your country", suffixIcon: C[86] || CT.C86, validator: dart.fn(value => {
                if (value == null || value[$isEmpty]) {
                  return "Please enter your country of residence";
                }
                return null;
              }, T.StringNToStringN())}), C[34] || CT.C34, new custom_text_field.CustomTextField.new({controller: this[_mobileController], label: "Mobile Number", hintText: "Enter your mobile number", keyboardType: text_input.TextInputType.phone, inputFormatters: T.JSArrayOfTextInputFormatter().of([text_formatter.FilteringTextInputFormatter.digitsOnly]), validator: dart.fn(value => {
                if (value == null || value[$isEmpty]) {
                  return "Please enter your mobile number";
                }
                if (value.length < 10) {
                  return "Please enter a valid mobile number";
                }
                return null;
              }, T.StringNToStringN())})])})});
    }
    [_buildStep2Form]() {
      return new form.Form.new({key: this[_formKeys][$_get](1), child: new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.start, children: T.JSArrayOfWidget().of([new custom_text_field.CustomTextField.new({controller: this[_nameController], label: "Full Name", hintText: "Enter your full name", validator: dart.fn(value => {
                if (value == null || value[$isEmpty]) {
                  return "Please enter your full name";
                }
                return null;
              }, T.StringNToStringN())}), C[34] || CT.C34, new custom_text_field.CustomTextField.new({controller: this[_emailController$], label: "Email Address", hintText: "Enter your email address", keyboardType: text_input.TextInputType.emailAddress, validator: dart.fn(value => {
                if (value == null || value[$isEmpty]) {
                  return "Please enter your email address";
                }
                if (!core.RegExp.new("^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$").hasMatch(value)) {
                  return "Please enter a valid email address";
                }
                return null;
              }, T.StringNToStringN())})])})});
    }
    [_buildStep3Form]() {
      return new form.Form.new({key: this[_formKeys][$_get](2), child: new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.start, children: T.JSArrayOfWidget().of([new custom_text_field.CustomTextField.new({controller: this[_passwordController$], label: "Password", hintText: "Create a password", obscureText: this[_obscurePassword$], suffixIcon: new icon_button.IconButton.new({icon: new icon.Icon.new(this[_obscurePassword$] ? icons.Icons.visibility_off : icons.Icons.visibility, {color: colors$.AppColors.mediumText}), onPressed: dart.bind(this, _togglePasswordVisibility$)}), validator: dart.fn(value => {
                if (value == null || value[$isEmpty]) {
                  return "Please enter a password";
                }
                if (value.length < 8) {
                  return "Password must be at least 8 characters";
                }
                return null;
              }, T.StringNToStringN())}), C[34] || CT.C34, new custom_text_field.CustomTextField.new({controller: this[_confirmPasswordController], label: "Confirm Password", hintText: "Confirm your password", obscureText: this[_obscureConfirmPassword], suffixIcon: new icon_button.IconButton.new({icon: new icon.Icon.new(this[_obscureConfirmPassword] ? icons.Icons.visibility_off : icons.Icons.visibility, {color: colors$.AppColors.mediumText}), onPressed: dart.bind(this, _toggleConfirmPasswordVisibility)}), validator: dart.fn(value => {
                if (value == null || value[$isEmpty]) {
                  return "Please confirm your password";
                }
                if (value !== this[_passwordController$].text) {
                  return "Passwords do not match";
                }
                return null;
              }, T.StringNToStringN())}), C[34] || CT.C34, new custom_text_field.CustomTextField.new({controller: this[_pinController], label: "PIN Code", hintText: "Create a 4-digit PIN", obscureText: this[_obscurePin], keyboardType: text_input.TextInputType.number, maxLength: 4, inputFormatters: T.JSArrayOfTextInputFormatter().of([text_formatter.FilteringTextInputFormatter.digitsOnly]), suffixIcon: new icon_button.IconButton.new({icon: new icon.Icon.new(this[_obscurePin] ? icons.Icons.visibility_off : icons.Icons.visibility, {color: colors$.AppColors.mediumText}), onPressed: dart.bind(this, _togglePinVisibility)}), validator: dart.fn(value => {
                if (value == null || value[$isEmpty]) {
                  return "Please enter a PIN code";
                }
                if (value.length !== 4) {
                  return "PIN must be 4 digits";
                }
                return null;
              }, T.StringNToStringN())})])})});
    }
    static ['_#new#tearOff']() {
      return new registration_screen._RegistrationScreenState.new();
    }
  };
  (registration_screen._RegistrationScreenState.new = function() {
    this[_formKeys] = T.JSArrayOfGlobalKeyOfFormState().of([T.GlobalKeyOfFormState().new(), T.GlobalKeyOfFormState().new(), T.GlobalKeyOfFormState().new()]);
    this[_currentStep] = 0;
    this[_countryController] = new editable_text.TextEditingController.new();
    this[_mobileController] = new editable_text.TextEditingController.new();
    this[_nameController] = new editable_text.TextEditingController.new();
    this[_emailController$] = new editable_text.TextEditingController.new();
    this[_passwordController$] = new editable_text.TextEditingController.new();
    this[_confirmPasswordController] = new editable_text.TextEditingController.new();
    this[_pinController] = new editable_text.TextEditingController.new();
    this[_obscurePassword$] = true;
    this[_obscureConfirmPassword] = true;
    this[_obscurePin] = true;
    registration_screen._RegistrationScreenState.__proto__.new.call(this);
    ;
  }).prototype = registration_screen._RegistrationScreenState.prototype;
  dart.addTypeTests(registration_screen._RegistrationScreenState);
  dart.addTypeCaches(registration_screen._RegistrationScreenState);
  dart.setMethodSignature(registration_screen._RegistrationScreenState, () => ({
    __proto__: dart.getMethods(registration_screen._RegistrationScreenState.__proto__),
    [_togglePasswordVisibility$]: dart.fnType(dart.void, []),
    [_toggleConfirmPasswordVisibility]: dart.fnType(dart.void, []),
    [_togglePinVisibility]: dart.fnType(dart.void, []),
    [_nextStep]: dart.fnType(dart.void, []),
    [_previousStep]: dart.fnType(dart.void, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    [_buildCurrentStepForm]: dart.fnType(framework.Widget, []),
    [_buildStep1Form]: dart.fnType(framework.Widget, []),
    [_buildStep2Form]: dart.fnType(framework.Widget, []),
    [_buildStep3Form]: dart.fnType(framework.Widget, [])
  }));
  dart.setLibraryUri(registration_screen._RegistrationScreenState, I[7]);
  dart.setFieldSignature(registration_screen._RegistrationScreenState, () => ({
    __proto__: dart.getFields(registration_screen._RegistrationScreenState.__proto__),
    [_formKeys]: dart.finalFieldType(core.List$(framework.GlobalKey$(form.FormState))),
    [_currentStep]: dart.fieldType(core.int),
    [_countryController]: dart.finalFieldType(editable_text.TextEditingController),
    [_mobileController]: dart.finalFieldType(editable_text.TextEditingController),
    [_nameController]: dart.finalFieldType(editable_text.TextEditingController),
    [_emailController$]: dart.finalFieldType(editable_text.TextEditingController),
    [_passwordController$]: dart.finalFieldType(editable_text.TextEditingController),
    [_confirmPasswordController]: dart.finalFieldType(editable_text.TextEditingController),
    [_pinController]: dart.finalFieldType(editable_text.TextEditingController),
    [_obscurePassword$]: dart.fieldType(core.bool),
    [_obscureConfirmPassword]: dart.fieldType(core.bool),
    [_obscurePin]: dart.fieldType(core.bool)
  }));
  dashboard_screen.DashboardScreen = class DashboardScreen extends framework.StatefulWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new dashboard_screen.DashboardScreen.new({key: key});
    }
    createState() {
      return new dashboard_screen._DashboardScreenState.new();
    }
  };
  (dashboard_screen.DashboardScreen.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    dashboard_screen.DashboardScreen.__proto__.new.call(this, {key: key});
    ;
  }).prototype = dashboard_screen.DashboardScreen.prototype;
  dart.addTypeTests(dashboard_screen.DashboardScreen);
  dart.addTypeCaches(dashboard_screen.DashboardScreen);
  dart.setMethodSignature(dashboard_screen.DashboardScreen, () => ({
    __proto__: dart.getMethods(dashboard_screen.DashboardScreen.__proto__),
    createState: dart.fnType(framework.State$(dashboard_screen.DashboardScreen), [])
  }));
  dart.setLibraryUri(dashboard_screen.DashboardScreen, I[8]);
  var BoxDecoration_shape = dart.privateName(box_decoration, "BoxDecoration.shape");
  var BoxDecoration_backgroundBlendMode = dart.privateName(box_decoration, "BoxDecoration.backgroundBlendMode");
  var BoxDecoration_gradient = dart.privateName(box_decoration, "BoxDecoration.gradient");
  var BoxDecoration_boxShadow = dart.privateName(box_decoration, "BoxDecoration.boxShadow");
  var Radius_y = dart.privateName(ui, "Radius.y");
  var Radius_x = dart.privateName(ui, "Radius.x");
  var BorderRadius_bottomRight = dart.privateName(border_radius, "BorderRadius.bottomRight");
  var BorderRadius_bottomLeft = dart.privateName(border_radius, "BorderRadius.bottomLeft");
  var BorderRadius_topRight = dart.privateName(border_radius, "BorderRadius.topRight");
  var BorderRadius_topLeft = dart.privateName(border_radius, "BorderRadius.topLeft");
  var BoxDecoration_borderRadius = dart.privateName(box_decoration, "BoxDecoration.borderRadius");
  var BoxDecoration_border = dart.privateName(box_decoration, "BoxDecoration.border");
  var BoxDecoration_image = dart.privateName(box_decoration, "BoxDecoration.image");
  var BoxDecoration_color = dart.privateName(box_decoration, "BoxDecoration.color");
  var _buildMetricItem = dart.privateName(dashboard_screen, "_buildMetricItem");
  var Divider_color = dart.privateName(divider, "Divider.color");
  var Divider_endIndent = dart.privateName(divider, "Divider.endIndent");
  var Divider_indent = dart.privateName(divider, "Divider.indent");
  var Divider_thickness = dart.privateName(divider, "Divider.thickness");
  var Divider_height = dart.privateName(divider, "Divider.height");
  var _buildInvestmentDetail = dart.privateName(dashboard_screen, "_buildInvestmentDetail");
  var BottomNavigationBarItem_tooltip = dart.privateName(bottom_navigation_bar_item, "BottomNavigationBarItem.tooltip");
  var BottomNavigationBarItem_backgroundColor = dart.privateName(bottom_navigation_bar_item, "BottomNavigationBarItem.backgroundColor");
  var BottomNavigationBarItem_label = dart.privateName(bottom_navigation_bar_item, "BottomNavigationBarItem.label");
  var BottomNavigationBarItem_activeIcon = dart.privateName(bottom_navigation_bar_item, "BottomNavigationBarItem.activeIcon");
  var BottomNavigationBarItem_icon = dart.privateName(bottom_navigation_bar_item, "BottomNavigationBarItem.icon");
  dashboard_screen._DashboardScreenState = class _DashboardScreenState extends framework.State$(dashboard_screen.DashboardScreen) {
    build(context) {
      return new scaffold.Scaffold.new({backgroundColor: colors$.AppColors.backgroundLightGrey, appBar: new app_bar.AppBar.new({backgroundColor: colors$.AppColors.primaryGreen, elevation: 0, title: new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.center, children: T.JSArrayOfWidget().of([new tanami_logo.TanamiLogo.new({height: 30})])}), actions: T.JSArrayOfWidget().of([new icon_button.IconButton.new({icon: C[88] || CT.C88, onPressed: dart.fn(() => {
              }, T.VoidTovoid())})]), systemOverlayStyle: C[90] || CT.C90}), body: new single_child_scroll_view.SingleChildScrollView.new({child: new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.start, children: T.JSArrayOfWidget().of([new container.Container.new({padding: C[92] || CT.C92, decoration: C[93] || CT.C93, child: new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.start, children: T.JSArrayOfWidget().of([new text.Text.new("Welcome back, " + this.userName, {style: text_styles.AppTextStyles.heading.copyWith({color: colors.Colors.white})}), C[69] || CT.C69, C[98] || CT.C98])})}), C[33] || CT.C33, new basic.Padding.new({padding: C[29] || CT.C29, child: new container.Container.new({width: 1 / 0, padding: C[83] || CT.C83, decoration: new box_decoration.BoxDecoration.new({color: colors.Colors.white, borderRadius: new border_radius.BorderRadius.circular(16), boxShadow: T.JSArrayOfBoxShadow().of([new box_shadow.BoxShadow.new({color: colors.Colors.black.withOpacity(0.05), blurRadius: 10, offset: C[101] || CT.C101})])}), child: new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.start, children: T.JSArrayOfWidget().of([C[102] || CT.C102, C[69] || CT.C69, new text.Text.new("USD " + this.portfolioValue[$toStringAsFixed](0), {style: C[103] || CT.C103}), C[33] || CT.C33, new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.spaceBetween, children: T.JSArrayOfWidget().of([this[_buildMetricItem]("Monthly Growth", "+4.2%", colors.Colors.green), this[_buildMetricItem]("Annual Return", "11.7%", colors.Colors.green), this[_buildMetricItem]("Risk Score", "Moderate", colors$.AppColors.mediumText)])})])})})}), C[33] || CT.C33, new basic.Padding.new({padding: C[29] || CT.C29, child: new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.spaceBetween, children: T.JSArrayOfWidget().of([C[105] || CT.C105, new text_button.TextButton.new({onPressed: dart.fn(() => {
                        navigator.Navigator.push(dart.dynamic, context, new page.MaterialPageRoute.new({builder: dart.fn(context => C[107] || CT.C107, T.BuildContextToFeatureScreen())}));
                      }, T.VoidTovoid()), child: C[108] || CT.C108})])})}), C[34] || CT.C34, new basic.Padding.new({padding: C[29] || CT.C29, child: new container.Container.new({width: 1 / 0, decoration: new box_decoration.BoxDecoration.new({color: colors$.AppColors.primaryGreen, borderRadius: new border_radius.BorderRadius.circular(16)}), child: new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.start, children: T.JSArrayOfWidget().of([new basic.Padding.new({padding: C[110] || CT.C110, child: new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.start, children: T.JSArrayOfWidget().of([new basic.Row.new({children: T.JSArrayOfWidget().of([new container.Container.new({padding: C[111] || CT.C111, decoration: new box_decoration.BoxDecoration.new({color: colors.Colors.orange, borderRadius: new border_radius.BorderRadius.circular(20)}), child: C[112] || CT.C112}), C[72] || CT.C72, C[114] || CT.C114])}), C[35] || CT.C35, C[116] || CT.C116, C[118] || CT.C118, this[_buildInvestmentDetail]("Investment Amount", "USD 10,000"), C[35] || CT.C35, this[_buildInvestmentDetail]("Current valuation", "USD 11,100"), C[35] || CT.C35, this[_buildInvestmentDetail]("Total return", "11.1%")])})})])})})}), C[33] || CT.C33, new basic.Padding.new({padding: C[29] || CT.C29, child: new basic.Row.new({children: T.JSArrayOfWidget().of([new basic.Expanded.new({child: new custom_button.CustomButton.new({label: "Invest More", onPressed: dart.fn(() => {
                        }, T.VoidTovoid()), type: custom_button.ButtonType.filled})}), C[120] || CT.C120, new basic.Expanded.new({child: new custom_button.CustomButton.new({label: "Withdraw", onPressed: dart.fn(() => {
                        }, T.VoidTovoid()), type: custom_button.ButtonType.outlined})})])})}), C[121] || CT.C121])})}), bottomNavigationBar: new bottom_navigation_bar.BottomNavigationBar.new({currentIndex: 0, selectedItemColor: colors$.AppColors.primaryGreen, unselectedItemColor: colors$.AppColors.mediumText, items: C[122] || CT.C122})});
    }
    [_buildMetricItem](title, value, valueColor) {
      return new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.start, children: T.JSArrayOfWidget().of([new text.Text.new(title, {style: C[132] || CT.C132}), C[133] || CT.C133, new text.Text.new(value, {style: new text_style.TextStyle.new({color: valueColor, fontSize: 16, fontWeight: ui.FontWeight.bold})})])});
    }
    [_buildInvestmentDetail](label, value) {
      return new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.spaceBetween, children: T.JSArrayOfWidget().of([new text.Text.new(label, {style: C[99] || CT.C99}), new text.Text.new(value, {style: C[134] || CT.C134})])});
    }
    static ['_#new#tearOff']() {
      return new dashboard_screen._DashboardScreenState.new();
    }
  };
  (dashboard_screen._DashboardScreenState.new = function() {
    this.userName = "Mr. Hamad";
    this.portfolioValue = 114350;
    dashboard_screen._DashboardScreenState.__proto__.new.call(this);
    ;
  }).prototype = dashboard_screen._DashboardScreenState.prototype;
  dart.addTypeTests(dashboard_screen._DashboardScreenState);
  dart.addTypeCaches(dashboard_screen._DashboardScreenState);
  dart.setMethodSignature(dashboard_screen._DashboardScreenState, () => ({
    __proto__: dart.getMethods(dashboard_screen._DashboardScreenState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    [_buildMetricItem]: dart.fnType(framework.Widget, [core.String, core.String, ui.Color]),
    [_buildInvestmentDetail]: dart.fnType(framework.Widget, [core.String, core.String])
  }));
  dart.setLibraryUri(dashboard_screen._DashboardScreenState, I[8]);
  dart.setFieldSignature(dashboard_screen._DashboardScreenState, () => ({
    __proto__: dart.getFields(dashboard_screen._DashboardScreenState.__proto__),
    userName: dart.finalFieldType(core.String),
    portfolioValue: dart.finalFieldType(core.double)
  }));
  var currentStep$ = dart.privateName(step_indicator, "StepIndicator.currentStep");
  var stepNumber$ = dart.privateName(step_indicator, "StepIndicator.stepNumber");
  var title$ = dart.privateName(step_indicator, "StepIndicator.title");
  var description$ = dart.privateName(step_indicator, "StepIndicator.description");
  step_indicator.StepIndicator = class StepIndicator extends framework.StatelessWidget {
    get currentStep() {
      return this[currentStep$];
    }
    set currentStep(value) {
      super.currentStep = value;
    }
    get stepNumber() {
      return this[stepNumber$];
    }
    set stepNumber(value) {
      super.stepNumber = value;
    }
    get title() {
      return this[title$];
    }
    set title(value) {
      super.title = value;
    }
    get description() {
      return this[description$];
    }
    set description(value) {
      super.description = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let currentStep = opts && 'currentStep' in opts ? opts.currentStep : null;
      let stepNumber = opts && 'stepNumber' in opts ? opts.stepNumber : null;
      let title = opts && 'title' in opts ? opts.title : null;
      let description = opts && 'description' in opts ? opts.description : null;
      return new step_indicator.StepIndicator.new({key: key, currentStep: currentStep, stepNumber: stepNumber, title: title, description: description});
    }
    build(context) {
      let isActive = this.stepNumber - 1 <= this.currentStep;
      let isCurrent = this.stepNumber - 1 === this.currentStep;
      return new basic.Row.new({crossAxisAlignment: flex.CrossAxisAlignment.start, children: T.JSArrayOfWidget().of([new container.Container.new({width: 28, height: 28, decoration: new box_decoration.BoxDecoration.new({shape: box_border.BoxShape.circle, color: isActive ? colors.Colors.white : colors.Colors.white.withOpacity(0.3), border: box_border.Border.all({color: isCurrent ? colors.Colors.white : colors.Colors.transparent, width: 2})}), child: new basic.Center.new({child: new text.Text.new(this.stepNumber[$toString](), {style: new text_style.TextStyle.new({color: isActive ? colors$.AppColors.primaryGreen : colors.Colors.white, fontWeight: ui.FontWeight.bold, fontSize: 14})})})}), C[135] || CT.C135, new basic.Expanded.new({child: new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.start, children: T.JSArrayOfWidget().of([new text.Text.new(this.title, {style: text_styles.AppTextStyles.stepHeading.copyWith({color: isActive ? colors.Colors.white : colors.Colors.white.withOpacity(0.7)})}), C[133] || CT.C133, new text.Text.new(this.description, {style: text_styles.AppTextStyles.stepDescription.copyWith({color: isActive ? colors.Colors.white : colors.Colors.white.withOpacity(0.5)})})])})})])});
    }
  };
  (step_indicator.StepIndicator.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let currentStep = opts && 'currentStep' in opts ? opts.currentStep : null;
    let stepNumber = opts && 'stepNumber' in opts ? opts.stepNumber : null;
    let title = opts && 'title' in opts ? opts.title : null;
    let description = opts && 'description' in opts ? opts.description : null;
    this[currentStep$] = currentStep;
    this[stepNumber$] = stepNumber;
    this[title$] = title;
    this[description$] = description;
    step_indicator.StepIndicator.__proto__.new.call(this, {key: key});
    ;
  }).prototype = step_indicator.StepIndicator.prototype;
  dart.addTypeTests(step_indicator.StepIndicator);
  dart.addTypeCaches(step_indicator.StepIndicator);
  dart.setMethodSignature(step_indicator.StepIndicator, () => ({
    __proto__: dart.getMethods(step_indicator.StepIndicator.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(step_indicator.StepIndicator, I[9]);
  dart.setFieldSignature(step_indicator.StepIndicator, () => ({
    __proto__: dart.getFields(step_indicator.StepIndicator.__proto__),
    currentStep: dart.finalFieldType(core.int),
    stepNumber: dart.finalFieldType(core.int),
    title: dart.finalFieldType(core.String),
    description: dart.finalFieldType(core.String)
  }));
  feature_screen.FeatureScreen = class FeatureScreen extends framework.StatefulWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new feature_screen.FeatureScreen.new({key: key});
    }
    createState() {
      return new feature_screen._FeatureScreenState.new();
    }
  };
  (feature_screen.FeatureScreen.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    feature_screen.FeatureScreen.__proto__.new.call(this, {key: key});
    ;
  }).prototype = feature_screen.FeatureScreen.prototype;
  dart.addTypeTests(feature_screen.FeatureScreen);
  dart.addTypeCaches(feature_screen.FeatureScreen);
  dart.setMethodSignature(feature_screen.FeatureScreen, () => ({
    __proto__: dart.getMethods(feature_screen.FeatureScreen.__proto__),
    createState: dart.fnType(framework.State$(feature_screen.FeatureScreen), [])
  }));
  dart.setLibraryUri(feature_screen.FeatureScreen, I[10]);
  var _investmentService = dart.privateName(feature_screen, "_investmentService");
  var _isLoading = dart.privateName(feature_screen, "_isLoading");
  var _investments = dart.privateName(feature_screen, "_investments");
  var _selectedFilter = dart.privateName(feature_screen, "_selectedFilter");
  var _filterOptions = dart.privateName(feature_screen, "_filterOptions");
  var _loadInvestments = dart.privateName(feature_screen, "_loadInvestments");
  var _filteredInvestments = dart.privateName(feature_screen, "_filteredInvestments");
  var _showInvestmentDetails = dart.privateName(feature_screen, "_showInvestmentDetails");
  var _buildDetailRow = dart.privateName(feature_screen, "_buildDetailRow");
  var AlwaysStoppedAnimation_value = dart.privateName(animations, "AlwaysStoppedAnimation.value");
  feature_screen._FeatureScreenState = class _FeatureScreenState extends framework.State$(feature_screen.FeatureScreen) {
    initState() {
      super.initState();
      this[_loadInvestments]();
    }
    [_loadInvestments]() {
      return async.async(dart.void, (function* _loadInvestments() {
        this.setState(dart.fn(() => {
          this[_isLoading] = true;
        }, T.VoidTovoid()));
        try {
          let investments = (yield this[_investmentService].getInvestmentOpportunities());
          this.setState(dart.fn(() => {
            this[_investments] = investments;
            this[_isLoading] = false;
          }, T.VoidTovoid()));
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            this.setState(dart.fn(() => {
              this[_isLoading] = false;
            }, T.VoidTovoid()));
            scaffold.ScaffoldMessenger.of(this.context).showSnackBar(new snack_bar.SnackBar.new({content: new text.Text.new("Error loading investments: " + e[$toString]()), backgroundColor: colors.Colors.red}));
          } else
            throw e$;
        }
      }).bind(this));
    }
    get [_filteredInvestments]() {
      if (this[_selectedFilter] === "All") {
        return this[_investments];
      } else {
        return this[_investments][$where](dart.fn(investment => investment.category === this[_selectedFilter], T.InvestmentOpportunityTobool()))[$toList]();
      }
    }
    build(context) {
      return new scaffold.Scaffold.new({backgroundColor: colors$.AppColors.backgroundLightGrey, appBar: new app_bar.AppBar.new({title: C[136] || CT.C136, centerTitle: true, backgroundColor: colors$.AppColors.lightGreen, foregroundColor: colors$.AppColors.darkText, elevation: 0, systemOverlayStyle: C[137] || CT.C137}), body: new basic.Column.new({children: T.JSArrayOfWidget().of([new container.Container.new({height: 60, padding: C[138] || CT.C138, child: new scroll_view.ListView.builder({scrollDirection: basic_types.Axis.horizontal, padding: C[139] || CT.C139, itemCount: this[_filterOptions][$length], itemBuilder: dart.fn((context, index) => {
                  let option = this[_filterOptions][$_get](index);
                  let isSelected = option === this[_selectedFilter];
                  return new gesture_detector.GestureDetector.new({onTap: dart.fn(() => {
                      this.setState(dart.fn(() => {
                        this[_selectedFilter] = option;
                      }, T.VoidTovoid()));
                    }, T.VoidTovoid()), child: new container.Container.new({margin: C[140] || CT.C140, padding: C[141] || CT.C141, decoration: new box_decoration.BoxDecoration.new({color: isSelected ? colors$.AppColors.primaryGreen : colors.Colors.white, borderRadius: new border_radius.BorderRadius.circular(20), border: box_border.Border.all({color: isSelected ? colors$.AppColors.primaryGreen : colors$.AppColors.lightGrey})}), child: new basic.Center.new({child: new text.Text.new(option, {style: new text_style.TextStyle.new({color: isSelected ? colors.Colors.white : colors$.AppColors.mediumText, fontWeight: isSelected ? ui.FontWeight.bold : ui.FontWeight.normal})})})})});
                }, T.BuildContextAndintToGestureDetector())})}), new basic.Expanded.new({child: this[_isLoading] ? C[142] || CT.C142 : this[_filteredInvestments][$isEmpty] ? new basic.Center.new({child: new basic.Column.new({mainAxisAlignment: flex.MainAxisAlignment.center, children: T.JSArrayOfWidget().of([C[144] || CT.C144, C[34] || CT.C34, C[146] || CT.C146, C[33] || CT.C33, new custom_button.CustomButton.new({label: "Reset Filters", onPressed: dart.fn(() => {
                        this.setState(dart.fn(() => {
                          this[_selectedFilter] = "All";
                        }, T.VoidTovoid()));
                      }, T.VoidTovoid()), type: custom_button.ButtonType.outlined})])})}) : new refresh_indicator.RefreshIndicator.new({onRefresh: dart.bind(this, _loadInvestments), color: colors$.AppColors.primaryGreen, child: new scroll_view.ListView.builder({padding: C[148] || CT.C148, itemCount: this[_filteredInvestments][$length], itemBuilder: dart.fn((context, index) => {
                    let investment = this[_filteredInvestments][$_get](index);
                    return new investment_card.InvestmentCard.new({investment: investment, onTap: dart.fn(() => {
                        this[_showInvestmentDetails](investment);
                      }, T.VoidTovoid())});
                  }, T.BuildContextAndintToInvestmentCard())})})})])})});
    }
    [_showInvestmentDetails](investment) {
      bottom_sheet.showModalBottomSheet(dart.dynamic, {context: this.context, isScrollControlled: true, backgroundColor: colors.Colors.transparent, builder: dart.fn(context => new draggable_scrollable_sheet.DraggableScrollableSheet.new({initialChildSize: 0.9, maxChildSize: 0.95, minChildSize: 0.5, builder: dart.fn((_, scrollController) => new container.Container.new({decoration: C[149] || CT.C149, child: new basic.Column.new({children: T.JSArrayOfWidget().of([new basic.Padding.new({padding: C[151] || CT.C151, child: new container.Container.new({width: 40, height: 4, decoration: new box_decoration.BoxDecoration.new({color: colors.Colors.grey._get(300), borderRadius: new border_radius.BorderRadius.circular(4)})})}), new basic.Expanded.new({child: new scroll_view.ListView.new({controller: scrollController, padding: C[83] || CT.C83, children: T.JSArrayOfWidget().of([new basic.Row.new({children: T.JSArrayOfWidget().of([new container.Container.new({padding: C[152] || CT.C152, decoration: new box_decoration.BoxDecoration.new({color: colors$.AppColors.lightGreen, borderRadius: new border_radius.BorderRadius.circular(12)}), child: C[153] || CT.C153}), C[120] || CT.C120, new basic.Expanded.new({child: new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.start, children: T.JSArrayOfWidget().of([new text.Text.new(investment.name, {style: C[155] || CT.C155}), new text.Text.new(investment.category, {style: C[156] || CT.C156})])})})])}), C[33] || CT.C33, C[157] || CT.C157, C[69] || CT.C69, new text.Text.new(investment.description, {style: C[159] || CT.C159}), C[33] || CT.C33, C[160] || CT.C160, C[34] || CT.C34, this[_buildDetailRow]("Minimum Investment", "$" + investment.minimumInvestment[$toStringAsFixed](0)), C[161] || CT.C161, this[_buildDetailRow]("Target Return", dart.str(investment.targetReturn) + "%"), C[161] || CT.C161, this[_buildDetailRow]("Risk Level", investment.riskLevel), C[161] || CT.C161, this[_buildDetailRow]("Duration", investment.duration), C[161] || CT.C161, this[_buildDetailRow]("Closing Date", dart.str(investment.closingDate.day) + "/" + dart.str(investment.closingDate.month) + "/" + dart.str(investment.closingDate.year)), C[33] || CT.C33, C[162] || CT.C162, C[34] || CT.C34, new basic.ClipRRect.new({borderRadius: new border_radius.BorderRadius.circular(4), child: new progress_indicator.LinearProgressIndicator.new({value: investment.fundingPercentage / 100, backgroundColor: colors.Colors.grey._get(200), valueColor: C[163] || CT.C163, minHeight: 8})}), C[69] || CT.C69, new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.spaceBetween, children: T.JSArrayOfWidget().of([new text.Text.new("$" + investment.currentFunding[$toStringAsFixed](0), {style: C[164] || CT.C164}), new text.Text.new("$" + investment.fundingGoal[$toStringAsFixed](0), {style: C[165] || CT.C165})])}), new text.Text.new(investment.fundingPercentage[$toStringAsFixed](1) + "% funded", {style: C[132] || CT.C132}), C[39] || CT.C39, new custom_button.CustomButton.new({label: "Invest Now", onPressed: dart.fn(() => {
                          navigator.Navigator.pop(T.ObjectN(), context);
                          scaffold.ScaffoldMessenger.of(context).showSnackBar(C[166] || CT.C166);
                        }, T.VoidTovoid()), type: custom_button.ButtonType.filled}), C[34] || CT.C34, new custom_button.CustomButton.new({label: "Save for Later", onPressed: dart.fn(() => {
                          navigator.Navigator.pop(T.ObjectN(), context);
                          scaffold.ScaffoldMessenger.of(context).showSnackBar(C[168] || CT.C168);
                        }, T.VoidTovoid()), type: custom_button.ButtonType.outlined})])})})])})}), T.BuildContextAndScrollControllerToContainer())}), T.BuildContextToDraggableScrollableSheet())});
    }
    [_buildDetailRow](label, value) {
      return new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.spaceBetween, children: T.JSArrayOfWidget().of([new text.Text.new(label, {style: C[156] || CT.C156}), new text.Text.new(value, {style: C[170] || CT.C170})])});
    }
    static ['_#new#tearOff']() {
      return new feature_screen._FeatureScreenState.new();
    }
  };
  (feature_screen._FeatureScreenState.new = function() {
    this[_investmentService] = new investment_service.InvestmentService.new();
    this[_isLoading] = true;
    this[_investments] = T.JSArrayOfInvestmentOpportunity().of([]);
    this[_selectedFilter] = "All";
    this[_filterOptions] = T.JSArrayOfString().of(["All", "Infrastructure", "Renewable Energy", "Technology", "Real Estate", "Healthcare"]);
    feature_screen._FeatureScreenState.__proto__.new.call(this);
    ;
  }).prototype = feature_screen._FeatureScreenState.prototype;
  dart.addTypeTests(feature_screen._FeatureScreenState);
  dart.addTypeCaches(feature_screen._FeatureScreenState);
  dart.setMethodSignature(feature_screen._FeatureScreenState, () => ({
    __proto__: dart.getMethods(feature_screen._FeatureScreenState.__proto__),
    [_loadInvestments]: dart.fnType(async.Future$(dart.void), []),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    [_showInvestmentDetails]: dart.fnType(dart.void, [investment_opportunity.InvestmentOpportunity]),
    [_buildDetailRow]: dart.fnType(framework.Widget, [core.String, core.String])
  }));
  dart.setGetterSignature(feature_screen._FeatureScreenState, () => ({
    __proto__: dart.getGetters(feature_screen._FeatureScreenState.__proto__),
    [_filteredInvestments]: core.List$(investment_opportunity.InvestmentOpportunity)
  }));
  dart.setLibraryUri(feature_screen._FeatureScreenState, I[10]);
  dart.setFieldSignature(feature_screen._FeatureScreenState, () => ({
    __proto__: dart.getFields(feature_screen._FeatureScreenState.__proto__),
    [_investmentService]: dart.finalFieldType(investment_service.InvestmentService),
    [_isLoading]: dart.fieldType(core.bool),
    [_investments]: dart.fieldType(core.List$(investment_opportunity.InvestmentOpportunity)),
    [_selectedFilter]: dart.fieldType(core.String),
    [_filterOptions]: dart.finalFieldType(core.List$(core.String))
  }));
  var id$ = dart.privateName(investment_opportunity, "InvestmentOpportunity.id");
  var name$ = dart.privateName(investment_opportunity, "InvestmentOpportunity.name");
  var description$0 = dart.privateName(investment_opportunity, "InvestmentOpportunity.description");
  var category$ = dart.privateName(investment_opportunity, "InvestmentOpportunity.category");
  var minimumInvestment$ = dart.privateName(investment_opportunity, "InvestmentOpportunity.minimumInvestment");
  var targetReturn$ = dart.privateName(investment_opportunity, "InvestmentOpportunity.targetReturn");
  var riskLevel$ = dart.privateName(investment_opportunity, "InvestmentOpportunity.riskLevel");
  var duration$ = dart.privateName(investment_opportunity, "InvestmentOpportunity.duration");
  var closingDate$ = dart.privateName(investment_opportunity, "InvestmentOpportunity.closingDate");
  var status$ = dart.privateName(investment_opportunity, "InvestmentOpportunity.status");
  var currentFunding$ = dart.privateName(investment_opportunity, "InvestmentOpportunity.currentFunding");
  var fundingGoal$ = dart.privateName(investment_opportunity, "InvestmentOpportunity.fundingGoal");
  var fundingPercentage$ = dart.privateName(investment_opportunity, "InvestmentOpportunity.fundingPercentage");
  investment_opportunity.InvestmentOpportunity = class InvestmentOpportunity extends core.Object {
    get id() {
      return this[id$];
    }
    set id(value) {
      super.id = value;
    }
    get name() {
      return this[name$];
    }
    set name(value) {
      super.name = value;
    }
    get description() {
      return this[description$0];
    }
    set description(value) {
      super.description = value;
    }
    get category() {
      return this[category$];
    }
    set category(value) {
      super.category = value;
    }
    get minimumInvestment() {
      return this[minimumInvestment$];
    }
    set minimumInvestment(value) {
      super.minimumInvestment = value;
    }
    get targetReturn() {
      return this[targetReturn$];
    }
    set targetReturn(value) {
      super.targetReturn = value;
    }
    get riskLevel() {
      return this[riskLevel$];
    }
    set riskLevel(value) {
      super.riskLevel = value;
    }
    get duration() {
      return this[duration$];
    }
    set duration(value) {
      super.duration = value;
    }
    get closingDate() {
      return this[closingDate$];
    }
    set closingDate(value) {
      super.closingDate = value;
    }
    get status() {
      return this[status$];
    }
    set status(value) {
      super.status = value;
    }
    get currentFunding() {
      return this[currentFunding$];
    }
    set currentFunding(value) {
      super.currentFunding = value;
    }
    get fundingGoal() {
      return this[fundingGoal$];
    }
    set fundingGoal(value) {
      super.fundingGoal = value;
    }
    get fundingPercentage() {
      return this[fundingPercentage$];
    }
    set fundingPercentage(value) {
      super.fundingPercentage = value;
    }
    static ['_#new#tearOff'](opts) {
      let id = opts && 'id' in opts ? opts.id : null;
      let name = opts && 'name' in opts ? opts.name : null;
      let description = opts && 'description' in opts ? opts.description : null;
      let category = opts && 'category' in opts ? opts.category : null;
      let minimumInvestment = opts && 'minimumInvestment' in opts ? opts.minimumInvestment : null;
      let targetReturn = opts && 'targetReturn' in opts ? opts.targetReturn : null;
      let riskLevel = opts && 'riskLevel' in opts ? opts.riskLevel : null;
      let duration = opts && 'duration' in opts ? opts.duration : null;
      let closingDate = opts && 'closingDate' in opts ? opts.closingDate : null;
      let status = opts && 'status' in opts ? opts.status : null;
      let currentFunding = opts && 'currentFunding' in opts ? opts.currentFunding : null;
      let fundingGoal = opts && 'fundingGoal' in opts ? opts.fundingGoal : null;
      let fundingPercentage = opts && 'fundingPercentage' in opts ? opts.fundingPercentage : null;
      return new investment_opportunity.InvestmentOpportunity.new({id: id, name: name, description: description, category: category, minimumInvestment: minimumInvestment, targetReturn: targetReturn, riskLevel: riskLevel, duration: duration, closingDate: closingDate, status: status, currentFunding: currentFunding, fundingGoal: fundingGoal, fundingPercentage: fundingPercentage});
    }
    static fromJson(json) {
      return new investment_opportunity.InvestmentOpportunity.new({id: core.String.as(json[$_get]("id")), name: core.String.as(json[$_get]("name")), description: core.String.as(json[$_get]("description")), category: core.String.as(json[$_get]("category")), minimumInvestment: core.double.as(dart.dsend(json[$_get]("minimumInvestment"), 'toDouble', [])), targetReturn: core.double.as(dart.dsend(json[$_get]("targetReturn"), 'toDouble', [])), riskLevel: core.String.as(json[$_get]("riskLevel")), duration: core.String.as(json[$_get]("duration")), closingDate: core.DateTime.parse(core.String.as(json[$_get]("closingDate"))), status: core.String.as(json[$_get]("status")), currentFunding: core.double.as(dart.dsend(json[$_get]("currentFunding"), 'toDouble', [])), fundingGoal: core.double.as(dart.dsend(json[$_get]("fundingGoal"), 'toDouble', [])), fundingPercentage: core.double.as(dart.dsend(json[$_get]("fundingPercentage"), 'toDouble', []))});
    }
    static ['_#fromJson#tearOff'](json) {
      return investment_opportunity.InvestmentOpportunity.fromJson(json);
    }
    toJson() {
      return new (T.IdentityMapOfString$dynamic()).from(["id", this.id, "name", this.name, "description", this.description, "category", this.category, "minimumInvestment", this.minimumInvestment, "targetReturn", this.targetReturn, "riskLevel", this.riskLevel, "duration", this.duration, "closingDate", this.closingDate.toIso8601String(), "status", this.status, "currentFunding", this.currentFunding, "fundingGoal", this.fundingGoal, "fundingPercentage", this.fundingPercentage]);
    }
  };
  (investment_opportunity.InvestmentOpportunity.new = function(opts) {
    let id = opts && 'id' in opts ? opts.id : null;
    let name = opts && 'name' in opts ? opts.name : null;
    let description = opts && 'description' in opts ? opts.description : null;
    let category = opts && 'category' in opts ? opts.category : null;
    let minimumInvestment = opts && 'minimumInvestment' in opts ? opts.minimumInvestment : null;
    let targetReturn = opts && 'targetReturn' in opts ? opts.targetReturn : null;
    let riskLevel = opts && 'riskLevel' in opts ? opts.riskLevel : null;
    let duration = opts && 'duration' in opts ? opts.duration : null;
    let closingDate = opts && 'closingDate' in opts ? opts.closingDate : null;
    let status = opts && 'status' in opts ? opts.status : null;
    let currentFunding = opts && 'currentFunding' in opts ? opts.currentFunding : null;
    let fundingGoal = opts && 'fundingGoal' in opts ? opts.fundingGoal : null;
    let fundingPercentage = opts && 'fundingPercentage' in opts ? opts.fundingPercentage : null;
    this[id$] = id;
    this[name$] = name;
    this[description$0] = description;
    this[category$] = category;
    this[minimumInvestment$] = minimumInvestment;
    this[targetReturn$] = targetReturn;
    this[riskLevel$] = riskLevel;
    this[duration$] = duration;
    this[closingDate$] = closingDate;
    this[status$] = status;
    this[currentFunding$] = currentFunding;
    this[fundingGoal$] = fundingGoal;
    this[fundingPercentage$] = fundingPercentage;
    ;
  }).prototype = investment_opportunity.InvestmentOpportunity.prototype;
  dart.addTypeTests(investment_opportunity.InvestmentOpportunity);
  dart.addTypeCaches(investment_opportunity.InvestmentOpportunity);
  dart.setMethodSignature(investment_opportunity.InvestmentOpportunity, () => ({
    __proto__: dart.getMethods(investment_opportunity.InvestmentOpportunity.__proto__),
    toJson: dart.fnType(core.Map$(core.String, dart.dynamic), [])
  }));
  dart.setStaticMethodSignature(investment_opportunity.InvestmentOpportunity, () => ['fromJson']);
  dart.setLibraryUri(investment_opportunity.InvestmentOpportunity, I[11]);
  dart.setFieldSignature(investment_opportunity.InvestmentOpportunity, () => ({
    __proto__: dart.getFields(investment_opportunity.InvestmentOpportunity.__proto__),
    id: dart.finalFieldType(core.String),
    name: dart.finalFieldType(core.String),
    description: dart.finalFieldType(core.String),
    category: dart.finalFieldType(core.String),
    minimumInvestment: dart.finalFieldType(core.double),
    targetReturn: dart.finalFieldType(core.double),
    riskLevel: dart.finalFieldType(core.String),
    duration: dart.finalFieldType(core.String),
    closingDate: dart.finalFieldType(core.DateTime),
    status: dart.finalFieldType(core.String),
    currentFunding: dart.finalFieldType(core.double),
    fundingGoal: dart.finalFieldType(core.double),
    fundingPercentage: dart.finalFieldType(core.double)
  }));
  dart.defineLazy(investment_opportunity, {
    /*investment_opportunity.sampleInvestmentOpportunities*/get sampleInvestmentOpportunities() {
      return T.JSArrayOfInvestmentOpportunity().of([new investment_opportunity.InvestmentOpportunity.new({id: "1", name: "Infrastructure Fund IV", description: "Investment in critical infrastructure projects across developing markets in Asia and Africa.", category: "Infrastructure", minimumInvestment: 10000, targetReturn: 11.5, riskLevel: "Moderate", duration: "5 years", closingDate: new core.DateTime.new(2024, 6, 20), status: "Open", currentFunding: 8500000, fundingGoal: 10000000, fundingPercentage: 85}), new investment_opportunity.InvestmentOpportunity.new({id: "2", name: "Renewable Energy Fund", description: "Investment in solar and wind energy projects with long-term power purchase agreements.", category: "Renewable Energy", minimumInvestment: 5000, targetReturn: 9.2, riskLevel: "Low", duration: "7 years", closingDate: new core.DateTime.new(2024, 8, 15), status: "Open", currentFunding: 12500000, fundingGoal: 25000000, fundingPercentage: 50}), new investment_opportunity.InvestmentOpportunity.new({id: "3", name: "Tech Growth Fund II", description: "Investment in late-stage technology companies with proven business models and strong growth.", category: "Technology", minimumInvestment: 25000, targetReturn: 18.7, riskLevel: "High", duration: "4 years", closingDate: new core.DateTime.new(2024, 5, 30), status: "Open", currentFunding: 35000000, fundingGoal: 50000000, fundingPercentage: 70}), new investment_opportunity.InvestmentOpportunity.new({id: "4", name: "Real Estate Development Fund", description: "Investment in commercial real estate development projects in major metropolitan areas.", category: "Real Estate", minimumInvestment: 15000, targetReturn: 12.3, riskLevel: "Moderate", duration: "6 years", closingDate: new core.DateTime.new(2024, 7, 10), status: "Open", currentFunding: 18000000, fundingGoal: 30000000, fundingPercentage: 60}), new investment_opportunity.InvestmentOpportunity.new({id: "5", name: "Healthcare Innovation Fund", description: "Investment in healthcare startups focused on medical technology and digital health solutions.", category: "Healthcare", minimumInvestment: 20000, targetReturn: 16.5, riskLevel: "High", duration: "5 years", closingDate: new core.DateTime.new(2024, 9, 5), status: "Open", currentFunding: 9000000, fundingGoal: 20000000, fundingPercentage: 45})]);
    },
    set sampleInvestmentOpportunities(value) {}
  }, false);
  investment_service.InvestmentService = class InvestmentService extends core.Object {
    getInvestmentOpportunities() {
      return async.async(T.ListOfInvestmentOpportunity(), function* getInvestmentOpportunities() {
        yield async.Future.delayed(C[171] || CT.C171);
        return investment_opportunity.sampleInvestmentOpportunities;
      });
    }
    getInvestmentOpportunityById(id) {
      return async.async(T.InvestmentOpportunityN(), (function* getInvestmentOpportunityById() {
        let opportunities = (yield this.getInvestmentOpportunities());
        try {
          return opportunities[$firstWhere](dart.fn(opportunity => opportunity.id === id, T.InvestmentOpportunityTobool()));
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            return null;
          } else
            throw e$;
        }
      }).bind(this));
    }
    investInOpportunity(opportunityId, amount) {
      return async.async(core.bool, function* investInOpportunity() {
        yield async.Future.delayed(C[171] || CT.C171);
        return true;
      });
    }
    static ['_#new#tearOff']() {
      return new investment_service.InvestmentService.new();
    }
  };
  (investment_service.InvestmentService.new = function() {
    ;
  }).prototype = investment_service.InvestmentService.prototype;
  dart.addTypeTests(investment_service.InvestmentService);
  dart.addTypeCaches(investment_service.InvestmentService);
  dart.setMethodSignature(investment_service.InvestmentService, () => ({
    __proto__: dart.getMethods(investment_service.InvestmentService.__proto__),
    getInvestmentOpportunities: dart.fnType(async.Future$(core.List$(investment_opportunity.InvestmentOpportunity)), []),
    getInvestmentOpportunityById: dart.fnType(async.Future$(dart.nullable(investment_opportunity.InvestmentOpportunity)), [core.String]),
    investInOpportunity: dart.fnType(async.Future$(core.bool), [core.String, core.double])
  }));
  dart.setLibraryUri(investment_service.InvestmentService, I[12]);
  var investment$ = dart.privateName(investment_card, "InvestmentCard.investment");
  var onTap$0 = dart.privateName(investment_card, "InvestmentCard.onTap");
  var _buildDetailItem = dart.privateName(investment_card, "_buildDetailItem");
  investment_card.InvestmentCard = class InvestmentCard extends framework.StatelessWidget {
    get investment() {
      return this[investment$];
    }
    set investment(value) {
      super.investment = value;
    }
    get onTap() {
      return this[onTap$0];
    }
    set onTap(value) {
      super.onTap = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let investment = opts && 'investment' in opts ? opts.investment : null;
      let onTap = opts && 'onTap' in opts ? opts.onTap : null;
      return new investment_card.InvestmentCard.new({key: key, investment: investment, onTap: onTap});
    }
    build(context) {
      return new gesture_detector.GestureDetector.new({onTap: this.onTap, child: new container.Container.new({margin: C[172] || CT.C172, decoration: new box_decoration.BoxDecoration.new({color: colors.Colors.white, borderRadius: new border_radius.BorderRadius.circular(16), boxShadow: T.JSArrayOfBoxShadow().of([new box_shadow.BoxShadow.new({color: colors.Colors.black.withOpacity(0.05), blurRadius: 8, offset: C[173] || CT.C173})])}), child: new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.start, children: T.JSArrayOfWidget().of([new container.Container.new({padding: C[141] || CT.C141, decoration: new box_decoration.BoxDecoration.new({color: colors$.AppColors.lightGreen, borderRadius: C[174] || CT.C174}), child: new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.spaceBetween, children: T.JSArrayOfWidget().of([new text.Text.new(this.investment.category, {style: C[109] || CT.C109}), new container.Container.new({padding: C[176] || CT.C176, decoration: new box_decoration.BoxDecoration.new({color: colors$.AppColors.primaryGreen, borderRadius: new border_radius.BorderRadius.circular(12)}), child: new text.Text.new(this.investment.status, {style: C[177] || CT.C177})})])})}), new basic.Padding.new({padding: C[14] || CT.C14, child: new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.start, children: T.JSArrayOfWidget().of([new text.Text.new(this.investment.name, {style: C[106] || CT.C106}), C[69] || CT.C69, new text.Text.new(this.investment.description, {style: C[156] || CT.C156, maxLines: 2, overflow: text_painter.TextOverflow.ellipsis}), C[34] || CT.C34, new basic.Row.new({children: T.JSArrayOfWidget().of([this[_buildDetailItem]("Min. Investment", "$" + number_format.NumberFormat.new("#,###").format(this.investment.minimumInvestment)), C[120] || CT.C120, this[_buildDetailItem]("Target Return", dart.str(this.investment.targetReturn) + "%"), C[120] || CT.C120, this[_buildDetailItem]("Duration", this.investment.duration)])}), C[34] || CT.C34, new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.start, children: T.JSArrayOfWidget().of([new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.spaceBetween, children: T.JSArrayOfWidget().of([new text.Text.new("Funding Progress: " + dart.str(this.investment.fundingPercentage[$toInt]()) + "%", {style: C[178] || CT.C178}), new text.Text.new("$" + number_format.NumberFormat.new("#,###").format(this.investment.currentFunding) + " / $" + number_format.NumberFormat.new("#,###").format(this.investment.fundingGoal), {style: C[132] || CT.C132})])}), C[69] || CT.C69, new basic.ClipRRect.new({borderRadius: new border_radius.BorderRadius.circular(4), child: new progress_indicator.LinearProgressIndicator.new({value: this.investment.fundingPercentage / 100, backgroundColor: colors.Colors.grey._get(200), valueColor: C[163] || CT.C163, minHeight: 8})}), C[34] || CT.C34, new basic.Row.new({children: T.JSArrayOfWidget().of([C[179] || CT.C179, C[181] || CT.C181, new text.Text.new("Closing: " + new date_format.DateFormat.new("MMM dd, yyyy").format(this.investment.closingDate), {style: C[132] || CT.C132})])})])})])})})])})})});
    }
    [_buildDetailItem](label, value) {
      return new basic.Expanded.new({child: new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.start, children: T.JSArrayOfWidget().of([new text.Text.new(label, {style: C[132] || CT.C132}), C[133] || CT.C133, new text.Text.new(value, {style: C[170] || CT.C170})])})});
    }
  };
  (investment_card.InvestmentCard.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let investment = opts && 'investment' in opts ? opts.investment : null;
    let onTap = opts && 'onTap' in opts ? opts.onTap : null;
    this[investment$] = investment;
    this[onTap$0] = onTap;
    investment_card.InvestmentCard.__proto__.new.call(this, {key: key});
    ;
  }).prototype = investment_card.InvestmentCard.prototype;
  dart.addTypeTests(investment_card.InvestmentCard);
  dart.addTypeCaches(investment_card.InvestmentCard);
  dart.setMethodSignature(investment_card.InvestmentCard, () => ({
    __proto__: dart.getMethods(investment_card.InvestmentCard.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    [_buildDetailItem]: dart.fnType(framework.Widget, [core.String, core.String])
  }));
  dart.setLibraryUri(investment_card.InvestmentCard, I[13]);
  dart.setFieldSignature(investment_card.InvestmentCard, () => ({
    __proto__: dart.getFields(investment_card.InvestmentCard.__proto__),
    investment: dart.finalFieldType(investment_opportunity.InvestmentOpportunity),
    onTap: dart.finalFieldType(dart.fnType(dart.void, []))
  }));
  dart.trackLibraries("zapp_user_main", {
    "file:///zapp/project/.zapp_entry.dart": $46zapp_entry,
    "file:///zapp/project/lib/main.dart": main,
    "file:///zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart": web_plugin_registrant,
    "file:///zapp/project/lib/screens/login_screen.dart": login_screen,
    "file:///zapp/project/lib/theme/colors.dart": colors$,
    "file:///zapp/project/lib/theme/text_styles.dart": text_styles,
    "file:///zapp/project/lib/widgets/custom_button.dart": custom_button,
    "file:///zapp/project/lib/widgets/custom_text_field.dart": custom_text_field,
    "file:///zapp/project/lib/assets/tanami_logo.dart": tanami_logo,
    "file:///zapp/project/lib/screens/registration_screen.dart": registration_screen,
    "file:///zapp/project/lib/screens/dashboard_screen.dart": dashboard_screen,
    "file:///zapp/project/lib/widgets/step_indicator.dart": step_indicator,
    "file:///zapp/project/lib/screens/feature_screen.dart": feature_screen,
    "file:///zapp/project/lib/models/investment_opportunity.dart": investment_opportunity,
    "file:///zapp/project/lib/services/investment_service.dart": investment_service,
    "file:///zapp/project/lib/widgets/investment_card.dart": investment_card
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["/zapp/project/.zapp_entry.dart","/zapp/project/lib/main.dart","/zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart","/zapp/project/lib/screens/login_screen.dart","/zapp/project/lib/theme/colors.dart","/zapp/project/lib/theme/text_styles.dart","/zapp/project/lib/widgets/custom_button.dart","/zapp/project/lib/widgets/custom_text_field.dart","/zapp/project/lib/assets/tanami_logo.dart","/zapp/project/lib/screens/registration_screen.dart","/zapp/project/lib/screens/dashboard_screen.dart","/zapp/project/lib/widgets/step_indicator.dart","/zapp/project/lib/screens/feature_screen.dart","/zapp/project/lib/models/investment_opportunity.dart","/zapp/project/lib/services/investment_service.dart","/zapp/project/lib/widgets/investment_card.dart"],"names":[],"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","file":"main.js"}');
  // Exports:
  return {
    zapp__project__$46zapp_entry: $46zapp_entry,
    zapp__project__lib__main: main,
    zapp__project__$46dart_tool__dartpad__web_plugin_registrant: web_plugin_registrant,
    zapp__project__lib__screens__login_screen: login_screen,
    zapp__project__lib__theme__colors: colors$,
    zapp__project__lib__theme__text_styles: text_styles,
    zapp__project__lib__widgets__custom_button: custom_button,
    zapp__project__lib__widgets__custom_text_field: custom_text_field,
    zapp__project__lib__assets__tanami_logo: tanami_logo,
    zapp__project__lib__screens__registration_screen: registration_screen,
    zapp__project__lib__screens__dashboard_screen: dashboard_screen,
    zapp__project__lib__widgets__step_indicator: step_indicator,
    zapp__project__lib__screens__feature_screen: feature_screen,
    zapp__project__lib__models__investment_opportunity: investment_opportunity,
    zapp__project__lib__services__investment_service: investment_service,
    zapp__project__lib__widgets__investment_card: investment_card
  };
}));

//# sourceMappingURL=main.js.map
